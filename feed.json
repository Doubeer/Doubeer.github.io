{
    "version": "https://jsonfeed.org/version/1",
    "title": null,
    "subtitle": "",
    "icon": "http://example.com/images/favicon.ico",
    "description": "",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2023/10/28/%E9%AB%98%E9%A1%B949%E4%B8%AA%E8%BF%87%E7%A8%8B/",
            "url": "http://example.com/2023/10/28/%E9%AB%98%E9%A1%B949%E4%B8%AA%E8%BF%87%E7%A8%8B/",
            "title": "高项49个过程",
            "date_published": "2023-10-28T11:25:06.000Z",
            "content_html": "<h1 id=\"整合管理\"><a class=\"anchor\" href=\"#整合管理\">#</a> 整合管理</h1>\n<h2 id=\"1-制定项目章程\"><a class=\"anchor\" href=\"#1-制定项目章程\">#</a> 1、制定项目章程</h2>\n<p>制定项目章程是编写一份正式批准项目并授权项目经理在项目活动中使用组织资源的文件的过程。本过程的主要作用：1 明确项目与组织战略目标之问的直接联系：2 确立项目的正式地位；3 展示组织对项目的承诺。</p>\n<h2 id=\"2-制订项目管理计划\"><a class=\"anchor\" href=\"#2-制订项目管理计划\">#</a> 2、制订项目管理计划</h2>\n<p>制订项目管理计划是定义、准备和协调项目计划的所有组成部分，并把它们整合为一份综合项目管理计划的过程。本过程的主要作用：生成一份综合文件，用于确定所有项目工作的基础及其执行方式。</p>\n<h2 id=\"3-指导与管理项目工作\"><a class=\"anchor\" href=\"#3-指导与管理项目工作\">#</a> 3、指导与管理项目工作</h2>\n<p>指导与管理项目工作是为实现项目目标而领导和执行项目管理计划中所确定的工作，并实施己批准变更的过程。本过程的主要作用是对项目工作和可交付成果开展综合管理，以提高项目成功的可能性。</p>\n<h2 id=\"4-管理项目知识\"><a class=\"anchor\" href=\"#4-管理项目知识\">#</a> 4、管理项目知识</h2>\n<p>管理项目知识是使用现有知识并生成新知识，以实现项目目标并且帮助组织学习的过程。管理项目过程的主要作用：1 利用己有的组织知识来创造或改进项目成果：2 使当前项目创造的知识可用手支持组织运营和未来的项目或阶段。</p>\n<h2 id=\"5-监控项目工作\"><a class=\"anchor\" href=\"#5-监控项目工作\">#</a> 5、监控项目工作</h2>\n<p>是跟踪、审查和报告整体项目进展，以实现项目管理计划中确定的绩效目标的过程。本过程的主要作用：1 让千系人了解项目的当前状态并认可为处理绩效问题而采取的行动；2 通过成本和进度预测，让干系人了解项目的未来状态。</p>\n<h2 id=\"6-实施整体变更控制\"><a class=\"anchor\" href=\"#6-实施整体变更控制\">#</a> 6、实施整体变更控制</h2>\n<p>实施整体变更控制是审 查所有交更请求、批准交更，管理对可交付成果、项目文件和项目管理计划的变更，并对变更处理结果进行沟通的过程。本过程审查对项目 文件、可交付成果或项目管理计划的所有变更请求，并决定对交更请求的处置方案．本过程的主要作用是确保对项目中己记录在案的变更做出综合评审。如果不考虑变更对整体项目目标或计划的影响就开展变更，往往会加剧整体项目风险。</p>\n<h2 id=\"7-结束项目或阶段\"><a class=\"anchor\" href=\"#7-结束项目或阶段\">#</a> 7、结束项目或阶段</h2>\n<p>结束项目或阶段是终结项目、阶段或合同的所有活动的过程。本过程的主要作用：1 存档项目或阶段信息，完成计划的工作：2 释放组织团队资源以展开新的工作。</p>\n<h1 id=\"范圃管理\"><a class=\"anchor\" href=\"#范圃管理\">#</a> 范圃管理</h1>\n<h2 id=\"1-规划范围管理\"><a class=\"anchor\" href=\"#1-规划范围管理\">#</a> 1、规划范围管理</h2>\n<p>规划范围管理是为了记录如何定义、确认和控制项目范围及产品范围，而创建范围管理计划的过程。本过程的主要作用是在整个项目期间对如何管理范围提供指南和方向。</p>\n<h2 id=\"2-收集需求\"><a class=\"anchor\" href=\"#2-收集需求\">#</a> 2、收集需求</h2>\n<p>收集需求是为实现目标而确定，记录并管理干系人的需要和需求的过程。本过程的主要作用是为定义产品范围和项目范围奠定基础。</p>\n<h2 id=\"3-定义范围\"><a class=\"anchor\" href=\"#3-定义范围\">#</a> 3、定义范围</h2>\n<p>定义范围是制定项目和产品详细描述的过程。本过程的主要作用是描述产品、服务或成果的边界和验收标淮。</p>\n<h2 id=\"4-创建-hbs\"><a class=\"anchor\" href=\"#4-创建-hbs\">#</a> 4、创建 HBS</h2>\n<p>创建工作分解结构 (RBS) 是把项目可交付成果和项日工作分解成较小、更易于管理的组件的过程。本过程的主要作用是为所要交付的内容提供架构。</p>\n<h2 id=\"5-确认范围\"><a class=\"anchor\" href=\"#5-确认范围\">#</a> 5、确认范围</h2>\n<p>确认范围是正式验收己完成的项目可交付成果的过程。本过程的主要作用：1 使验收过程具有客观性：2 通过确认每个可交付成果来提高最终产品、服务或成果获得验收的可能性。</p>\n<h2 id=\"6-控制范围\"><a class=\"anchor\" href=\"#6-控制范围\">#</a> 6、控制范围</h2>\n<p>控制范用是监督项目和产品的范围状态，管理范用基准交更的过程。本过程的主要作用是在整个项目期间保持对范 围基淮的维护。</p>\n<h1 id=\"迸度管理\"><a class=\"anchor\" href=\"#迸度管理\">#</a> 迸度管理</h1>\n<h2 id=\"1-规划进度管理\"><a class=\"anchor\" href=\"#1-规划进度管理\">#</a> 1、规划进度管理</h2>\n<p>规划进度管理是为规划、编制、管理、执行和控制项目进度而制定收策、程序和文档的过程。<br>\n本过程的主要作用是为如何在整个项目期间管理项目进度提供指南和方向。</p>\n<h2 id=\"2-定义活动\"><a class=\"anchor\" href=\"#2-定义活动\">#</a> 2、定义活动</h2>\n<p>定义活动是识别和记录为完成项目可交付成果而须采取的具体行动的过程。本过程的主要作用是，将工作包分解为进度活动，作为对项目工作进行进度估算、规划、执行、监督和控制的基础。</p>\n<h2 id=\"3-排列活动顺序\"><a class=\"anchor\" href=\"#3-排列活动顺序\">#</a> 3、排列活动顺序</h2>\n<p>排列活动顺序是识别和记录项目活动之间关系的过程。本过程的主要作用是定义工作之何的逻辑顺序，以便在既定的所有项日制约因素下获得最高的效率。</p>\n<h2 id=\"4-估算活动持续时间\"><a class=\"anchor\" href=\"#4-估算活动持续时间\">#</a> 4、估算活动持续时间</h2>\n<p>估算活动持续时间是根据资源估算的结果，估算完成单项活动所需工作时段数的过程。本过程的主要作用是确定完成每个活动所需花费的时间量。</p>\n<h2 id=\"5-制订进度计划\"><a class=\"anchor\" href=\"#5-制订进度计划\">#</a> 5 制订进度计划</h2>\n<p>制订进度计划是分析活动顺序、持续时问、资源需求和进度制约因素，创建进度模型，从而落实项目执行和监控的过程。本过程的主要作用是为完成项日活动而制定具有计划日期的进度模型。</p>\n<h2 id=\"6-控制进度\"><a class=\"anchor\" href=\"#6-控制进度\">#</a> 6、控制进度</h2>\n<p>控制进度是滥督项目状态，以更新项目进度和管理进度基准变更的过程。本过程的主要作用是在整个项目期间保持对进度基准的维护。</p>\n<h1 id=\"成本管理\"><a class=\"anchor\" href=\"#成本管理\">#</a> 成本管理</h1>\n<h2 id=\"1-规划成本管理\"><a class=\"anchor\" href=\"#1-规划成本管理\">#</a> 1、规划成本管理</h2>\n<p>规划成本管理是确定如何佔算、预算、管理、监督和控制项目成本的过程，本过程的主要作用是在整个项目期问为如何管理项目成本提供指南和方向。</p>\n<h2 id=\"2-估算成本\"><a class=\"anchor\" href=\"#2-估算成本\">#</a> 2、估算成本</h2>\n<p>佶算成本是对完成项目工作所需资源成本进行近似佔算的过程。本过程的主要作用是确定项目所需的资金。</p>\n<h2 id=\"3-制定预算\"><a class=\"anchor\" href=\"#3-制定预算\">#</a> 3、制定预算</h2>\n<p>制定预算是汇总所有单个活动或工作包的估算成本，建立一个经批淮的成本基准的过程。本<br>\n过程的主要作用是，确定可以依据其来进行监督和控制项目绩效的成本基淮。项目顸算包括经批准用于执行项目的全部资金，而成本基准是经过批淮且按时间段分配的项日 预算，包括应急储备，但不包括管理储备。</p>\n<h2 id=\"4-控制成本\"><a class=\"anchor\" href=\"#4-控制成本\">#</a> 4、控制成本</h2>\n<p>控制成本是滥督项目状态，以更新项目成本和管理成本基准变更的过程。本过程的主要作用是在整个项目期间保持对成本基淮的維护。</p>\n<h1 id=\"质量管理\"><a class=\"anchor\" href=\"#质量管理\">#</a> 质量管理</h1>\n<h2 id=\"1-规划质量管理\"><a class=\"anchor\" href=\"#1-规划质量管理\">#</a> 1、规划质量管理</h2>\n<p>规划质量管理是识别项日及其可交付成果的质量要求、标准，并书面描述项目将如何证明符合质量要求、标准的过程。本过程的主要作用是为在整个项目期间如何管理和核实质量提供指南和方向。</p>\n<h2 id=\"2-管理质量\"><a class=\"anchor\" href=\"#2-管理质量\">#</a> 2、管理质量</h2>\n<p>管理质量是把组织的质量政策用于项目，并将质量管理计划转化为可执行的质量活动的过程。本过程的主要作用：1 提高实现质量目标的可能性；2 识别无效过程和导致质量低劣的原因：3 使用控制质量过程的数据和结果向干系人展示项目的总体质量状；态。</p>\n<h2 id=\"3-控制质量\"><a class=\"anchor\" href=\"#3-控制质量\">#</a> 3、控制质量</h2>\n<p>控制质量是为了评估绩效，确保项目输出完整、正确且满足客户期望，而监督和记录质量管理活动执行结果的过程。本过程的主要作用：1 核实项目可交付成果和工作己经达到主要干茶人的质量要求，可供最终验收；2 确定项目输出是否达到预期目的，这些输出需要满足所有适用标准、要求、法规和规范。</p>\n<h1 id=\"资源管理\"><a class=\"anchor\" href=\"#资源管理\">#</a> 资源管理</h1>\n<h2 id=\"1-规划资源管理\"><a class=\"anchor\" href=\"#1-规划资源管理\">#</a> 1、规划资源管理.</h2>\n<p>规划资源管理是定义如何估算、获取、管理和利用团队以及实物资源的过程。本过程的主要作用是，根据项日类型和复杂程度确定适用于项日资源的管理方法和管理程度。</p>\n<h2 id=\"2-估算活动资源\"><a class=\"anchor\" href=\"#2-估算活动资源\">#</a> 2、估算活动资源</h2>\n<p>估算活动资源是估算损行项目所需的团队资源，以及材料、设备和用品的类型和数量的过程。<br>\n本过程的主要作用是明确完成项日所需的资源种类、数量和特性。</p>\n<h2 id=\"3-获取资源\"><a class=\"anchor\" href=\"#3-获取资源\">#</a> 3、获取资源</h2>\n<p>获取资源是获取项目所需的团队成员、设施、设备、材料、用品和其他资源的过程。本过程的主要作用：1 概述和指导资源的选择：2 将选择的资源分配给相应的活动。</p>\n<h2 id=\"4-建设团队\"><a class=\"anchor\" href=\"#4-建设团队\">#</a> 4、建设团队</h2>\n<p>建设团队是提高工作能力，促进团以成员互动，改善团队整体氛围，以提高项目绩效的过程。<br>\n本过程的主要作用是，改进团队苏作、增强人际关系技能、激励员工、诫少摩擦以及提升整体项目绩效。</p>\n<h2 id=\"5-管理团队\"><a class=\"anchor\" href=\"#5-管理团队\">#</a> 5、管理团队</h2>\n<p>管理团队是跟踪团队成员工作表现、提供反馈、解诀问题并管理团队变更以优化项目绩效的过程。本过程的主要作用是，影响团队行为、管理冲突以及解决问题。</p>\n<h2 id=\"6-控制资源\"><a class=\"anchor\" href=\"#6-控制资源\">#</a> 6、控制资源</h2>\n<p>控制资源是确保按计划为项目分配实物资源，以及根捃资源使用计划监督资源实际使用情况，并采取必要纠正措施的过程。本过程的主要作用：1 确保所分配的资源适时、适地可用于项目；2 资源在不再需要时被释放。</p>\n<h1 id=\"沟通管理\"><a class=\"anchor\" href=\"#沟通管理\">#</a> 沟通管理</h1>\n<h2 id=\"1-规划沟通管理\"><a class=\"anchor\" href=\"#1-规划沟通管理\">#</a> 1、规划沟通管理</h2>\n<p>规划沟通管理是基于每个干系人或干系人群体的信息需求、可用的组织资产，以及具体项目的需求，为项目沟通活动制定恰当的方法和计划的过程。本过程的主要作用：1 及时向干系人提供相关信息；2 列导干系人有效参与项目；3 编制书面沟道计划。</p>\n<h2 id=\"2-管理沟通\"><a class=\"anchor\" href=\"#2-管理沟通\">#</a> 2、管理沟通</h2>\n<p>管理沟通是确保项目信息及时且怡当地收集、生成、发布、存储、检索、管理、监督和最终处置的过程。本过程的主要作用是，促成项目团队与干系人之间的有效信息流动。</p>\n<h2 id=\"3-监督沟通\"><a class=\"anchor\" href=\"#3-监督沟通\">#</a> 3、监督沟通</h2>\n<p>监督沟通是确保满足项目及其千系人的信息需求的过程。本过程的主要作用是，按沟通管理计划和千系人参与计划的要求优化信息传送流程。</p>\n<h1 id=\"风险管理\"><a class=\"anchor\" href=\"#风险管理\">#</a> 风险管理</h1>\n<h2 id=\"1-规划风险管理\"><a class=\"anchor\" href=\"#1-规划风险管理\">#</a> 1、规划风险管理</h2>\n<p>规划风险管理是定义如何实施项目冈险管理活动的过程。本过程的主要作用是，确保冈险管理的水平、方法和可见度与项目风险程度相匹配，与对组织和其他千茶人的重要程度相匹配。</p>\n<h2 id=\"2-识别风险\"><a class=\"anchor\" href=\"#2-识别风险\">#</a> 2、识别风险</h2>\n<p>识别风险是识别单个项目风险以及整体项目风险的来源，并记录风险特征的过程。本过程的主要作用：1 记录现有的单个项目风险，以及整体项目风险的来源：2 汇总相关信息，以便项目团队能够怡当地应对己识别的风险。</p>\n<h2 id=\"3-实施定性风险分析\"><a class=\"anchor\" href=\"#3-实施定性风险分析\">#</a> 3、实施定性风险分析</h2>\n<p>实施定性风险分析是通过评估单个项目风险发生的概率和影响及其他特征，对风险进行优先级排序，从而为后续分析或行动提供基础的过程。本过程的主要作用是重点关注高优氕級的风险。</p>\n<h2 id=\"4-实施定量风险分析\"><a class=\"anchor\" href=\"#4-实施定量风险分析\">#</a> 4、实施定量风险分析</h2>\n<p>实施定量风险分析是就己识别的单个项目叉险和不确定性的其他来源对整体项目目标的影响进行定量分析的过程。本过程的主要作用：1 量化整体项目风险最大可能性；2 提供额外的定量风险信息，以支持风险应对规划。</p>\n<h2 id=\"5-规划风险应对\"><a class=\"anchor\" href=\"#5-规划风险应对\">#</a> 5、规划风险应对</h2>\n<p>规划风险的应对措施是为了应对项目 风险，而制定可选方案、选择应对策略并商定应对行动的过程。本过程的主要作用：1 制定应对整体项目风险和单个项目风险的适当方法；2 分配<br>\n资源，并根据需要将相关活动添加进项目文件和项目管理计划中。</p>\n<h2 id=\"6-实施风险应对\"><a class=\"anchor\" href=\"#6-实施风险应对\">#</a> 6、实施风险应对</h2>\n<p>实施风险应对是执行商定的风险应对计划的过程。本过程的主要作用：1 确保按计划执行商定的风险应对措施：2 管理整体项目风险入口、最小化单个项目威胁，以及最大化单个项目机会。</p>\n<h2 id=\"7-监督风险\"><a class=\"anchor\" href=\"#7-监督风险\">#</a> 7、监督风险</h2>\n<p>监督风险是在整个项目期间，监督风险应对计划的实施，并跟踪己识别风险、识别和分析新风险，以及评估风险管理有效性的过程。本过程的主要作用是，保证项目决策是在整体项目风险和单个项目风险当前信息的基础上进行。</p>\n<h1 id=\"釆购管理\"><a class=\"anchor\" href=\"#釆购管理\">#</a> 釆购管理</h1>\n<h2 id=\"1-规划采购管理\"><a class=\"anchor\" href=\"#1-规划采购管理\">#</a> 1、规划采购管理</h2>\n<p>规划采购管理是记录项目采购决策、明确采购方法，及识別潜在卖方的过程。本过程的主要作用是确定是否从项目外部获取货物和服务，如果是，则还要确定将在什么时间、以什么方式获取什么货物和服务。货物和服务可从执行组织的其他部门采购，或者从外部果道采购。</p>\n<h2 id=\"2-实施采购\"><a class=\"anchor\" href=\"#2-实施采购\">#</a> 2、实施采购</h2>\n<p>实施采购足获取卖方应答、选择卖方并授子合同的过程。本过程的主要作用足，选定合格卖方并签署关于货物或服务交付的法律协议。本过程的最后成果是签订的协议，包括正式合同。</p>\n<h2 id=\"3-控制采购\"><a class=\"anchor\" href=\"#3-控制采购\">#</a> 3、控制采购</h2>\n<p>控制采购是管理采购关系、监督合同绩效、实施必要的变更和糾偏，以及关闭合同的过程。<br>\n本过程的主要作用是，确保买卖双方很行法律协议，满足项目需求。</p>\n<h1 id=\"干系人管理\"><a class=\"anchor\" href=\"#干系人管理\">#</a> 干系人管理</h1>\n<h2 id=\"1-识別干系人\"><a class=\"anchor\" href=\"#1-识別干系人\">#</a> 1、识別干系人</h2>\n<p>识别干系人是定期识别项目干系人，分析和记录他们的利益、参与度、相互依赖性、影响力和对项目成功的潜在影响的过程。本过程的主要作用是，使项目团队能够建立对每个干系人或千系人群体的适度关注。</p>\n<h2 id=\"2-规划干系人参与\"><a class=\"anchor\" href=\"#2-规划干系人参与\">#</a> 2、规划干系人参与</h2>\n<p>规划干系人参与是根据干系人的需求、期望、利益和对项目的潜在影响，制定项目干系人参与项目的方法的过程。本过程的主要作用是，提供与干系人进行有效互动的可行计划。</p>\n<h2 id=\"3-管理干系人参与\"><a class=\"anchor\" href=\"#3-管理干系人参与\">#</a> 3、管理干系人参与</h2>\n<p>管理千系人参与是通过与干系人进行沟通协作，以满足其需求与期望、处理问题，并促进干系人合理参与的过程。本过程的主要作用是，尽可能提高干系人的支持度，并降低干系人的抵制程度。</p>\n<h2 id=\"4-监督干系人参与\"><a class=\"anchor\" href=\"#4-监督干系人参与\">#</a> 4、监督干系人参与</h2>\n<p>监督干系人参与是监督项目干东人的关系，并通过修订参与策略和计划来引导干系人合理参与项目的过程。本过程的主要作用是，随着项目进展和环境变化，维持或提升干系人参与活动的效率和效果。</p>\n",
            "tags": [
                "软考",
                "信息系统项目管理师",
                "软考",
                "高项"
            ]
        },
        {
            "id": "http://example.com/2023/10/27/%E7%AC%AC19%E7%AB%A0%E9%85%8D%E7%BD%AE%E4%B8%8E%E5%8F%98%E6%9B%B4%E7%AE%A1%E7%90%86/",
            "url": "http://example.com/2023/10/27/%E7%AC%AC19%E7%AB%A0%E9%85%8D%E7%BD%AE%E4%B8%8E%E5%8F%98%E6%9B%B4%E7%AE%A1%E7%90%86/",
            "title": "第19章配置与变更管理",
            "date_published": "2023-10-27T03:33:52.000Z",
            "content_html": "",
            "tags": []
        },
        {
            "id": "http://example.com/2023/10/23/%E9%AB%98%E9%A1%B91-5%E7%AB%A0/",
            "url": "http://example.com/2023/10/23/%E9%AB%98%E9%A1%B91-5%E7%AB%A0/",
            "title": "高项1-5章",
            "date_published": "2023-10-23T02:45:16.000Z",
            "content_html": "<h1 id=\"信息化发展\"><a class=\"anchor\" href=\"#信息化发展\">#</a> 信息化发展</h1>\n<h2 id=\"信息系统与信息化\"><a class=\"anchor\" href=\"#信息系统与信息化\">#</a> 信息系统与信息化</h2>\n<h3 id=\"信息\"><a class=\"anchor\" href=\"#信息\">#</a> 信息</h3>\n<ol>\n<li>信息不是物质，也不是能量，它以一种普遍形式，表达物质运动规律，在客观世界里大量存在、产生和传递。</li>\n<li>香农指出：信息是用来消除随机不确定性的东西。</li>\n<li>信息的基础是数据。</li>\n<li>信息的目的是用来 “消除不确定的因素”。</li>\n<li>信息具有价值，而价值的大小取决于信息的质量。</li>\n</ol>\n<h3 id=\"信息系统\"><a class=\"anchor\" href=\"#信息系统\">#</a> 信息系统</h3>\n<ol>\n<li>信息系统的生命周期：系统规划（可行性分析与项目开发计划） 、系统分析（需求分析）、系统设计（概要设计、详细设计），系统实施（编码、测试），系统运行和维护（维护).\n<ol>\n<li>系统规划：确定发展战略</li>\n<li>系统分析：确定基本目标和逻辑功能，做什么、逻辑模型</li>\n<li>系统设计：怎么做、物理模型</li>\n<li>系统实施：涉及采购设备</li>\n<li>系统运行和维护：维护评价</li>\n</ol>\n</li>\n<li>立项（系统规划）、开发（系统分析、系统设计、系统实施）、运维（系统运行和维护）、消亡阶段。</li>\n</ol>\n<h3 id=\"信息化\"><a class=\"anchor\" href=\"#信息化\">#</a> 信息化</h3>\n<ol>\n<li>信息化内涵包括：\n<ol>\n<li>信息网络体系</li>\n<li>信息产业基础</li>\n<li>社会运行环境</li>\n<li>效用积累过程</li>\n</ol>\n</li>\n<li>信息化六要素：信息技术应用、信息资源、信息网络、信息技术和产业、信息化人才、信息化政策法规和标准规范     上鹰（应用）下鸡（技术） 左人（人才） 右龟（规范） 核心任务（信息资源）基础设施（信息网络）</li>\n<li>信息化趋势：产品信息化、产业信息化、社会生活信息化、国民经济信息化</li>\n</ol>\n<h2 id=\"现代化基础设施\"><a class=\"anchor\" href=\"#现代化基础设施\">#</a> 现代化基础设施</h2>\n<h3 id=\"新基建\"><a class=\"anchor\" href=\"#新基建\">#</a> 新基建</h3>\n<ol>\n<li>新基建 7 大领域：\n<ol>\n<li>5g 基建</li>\n<li>特高压</li>\n<li>城际高速铁路和城际轨道交通</li>\n<li>新能源汽车充电桩</li>\n<li>大数据中心</li>\n<li>人工智能</li>\n<li>工业互联网</li>\n</ol>\n</li>\n<li>新基建包括三方面：\n<ol>\n<li>信息基础设施：通信网络基础设施、新技术基础设施、算力基础设施  凸出 “技术新”</li>\n<li>融合基础设施：智能交通基础设施、智慧能源基础设施 “应用新”</li>\n<li>创新基础设施：具有公益属性的基础设施 “平台新”</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"工业互联网\"><a class=\"anchor\" href=\"#工业互联网\">#</a> 工业互联网</h3>\n<ol>\n<li>四大层级：\n<ol>\n<li>网络为基础：网络体系包括：网络互联、数据互通、标识解析</li>\n<li>平台为中枢：平台体系包括：边缘层、IaaS、PaaS、SaaS</li>\n<li>数据为要素：三个特性：重要性，专业性，复杂性</li>\n<li>安全为保障：三大特点：涉及范围广、造成影响大、企业防护基础弱</li>\n</ol>\n</li>\n<li>工业互联网是新一代信息通信技术与工业经济深度融合的新型基础设施。</li>\n<li>六大典型应用模式：\n<ol>\n<li>平台化设计</li>\n<li>智能化制造</li>\n<li>网络化协同</li>\n<li>个性化定制</li>\n<li>服务化延申</li>\n<li>数字化管理</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"车联网\"><a class=\"anchor\" href=\"#车联网\">#</a> 车联网</h3>\n<ol>\n<li>\n<p>车联网是新一代网络通信技术与汽车、电子、道路交通运输等领域深度融合的新兴产业形态。</p>\n</li>\n<li>\n<p>车辆为系统是一个 “端、管、云” 三层体系</p>\n</li>\n</ol>\n<h2 id=\"现代化创新发展\"><a class=\"anchor\" href=\"#现代化创新发展\">#</a> 现代化创新发展</h2>\n<h3 id=\"农业农村现代化\"><a class=\"anchor\" href=\"#农业农村现代化\">#</a> 农业农村现代化</h3>\n<ol>\n<li>实现农业农村现代化是全面建设社会主义现代化国家的重大任务。</li>\n<li>乡村振兴战略：\n<ol>\n<li>建设基础设施</li>\n<li>发展智慧农业</li>\n<li>建设数字乡村</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"两化融合与智能制造\"><a class=\"anchor\" href=\"#两化融合与智能制造\">#</a> 两化融合与智能制造</h3>\n<ol>\n<li>两化融合是信息化和工业化的高层次深度结合</li>\n<li>信息化与工业化主要在<strong>技术、产品、业务、产业</strong>四个方面进行融合\n<ol>\n<li>技术融合：<strong>工业技术</strong>和信<strong>息技术</strong>融合</li>\n<li>产品融合：电子信息技术或产品渗透到产品中</li>\n<li>业务融合：信息技术应用到企业研发设计等环节中</li>\n<li>产业衍生：催生新产业</li>\n</ol>\n</li>\n<li>智能制造：自感知、自学习、自决策、自适应</li>\n<li>智能制造能力成熟度模型：\n<ol>\n<li>一级（规划级）：对基础条件进行规划</li>\n<li>二级（规范级）：单一业务活动数据共享</li>\n<li>三级（集成级）：管业务数据共享</li>\n<li>四级（优化级）；对核心业务精准预测和优化</li>\n<li>五级（引领级）：优化和创新，产业链协同衍生</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"消费互联网\"><a class=\"anchor\" href=\"#消费互联网\">#</a> 消费互联网</h3>\n<ol>\n<li>消费互联网以个人为用户，以日常生活为应用场景，以消费者为服务中心</li>\n<li>本质是个人虚拟化，增强个人生活消费体验；无身份社会建立</li>\n<li>消费互联网具有：媒体属性、产业属性</li>\n</ol>\n<h2 id=\"数字中国\"><a class=\"anchor\" href=\"#数字中国\">#</a> 数字中国</h2>\n<p>《中华人民共和国国民经济和社会发展第十四个五年规划和 2035 年远景目标纲要》中从<strong>数字经济、数字政府、数字社会、数字生态</strong>四个尾读出发勾勒了建设数字中国的宏伟蓝图。</p>\n<h3 id=\"数字经济\"><a class=\"anchor\" href=\"#数字经济\">#</a> 数字经济</h3>\n<ol>\n<li>数字经济包括：\n<ol>\n<li>数字产业化：是数字经济的基础部分</li>\n<li>产业数字化：</li>\n<li>数字化治理：以 &quot;信息技术 + 治理&quot; 为典型特征的技管结合</li>\n<li>数据价值化：三化框架：数据资源化、数字资产化、数据资本化</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"数字政府\"><a class=\"anchor\" href=\"#数字政府\">#</a> 数字政府</h3>\n<ol>\n<li>互联网 + 政务</li>\n<li>一网通办、跨省通办、一网统管</li>\n</ol>\n<h3 id=\"数字社会\"><a class=\"anchor\" href=\"#数字社会\">#</a> 数字社会</h3>\n<ol>\n<li>数字民生建设重点强调：普惠、赋能、利民</li>\n<li>智慧城市核心能力要素：\n<ol>\n<li>数据治理</li>\n<li>数字孪生</li>\n<li>边际决策</li>\n<li>多元融合</li>\n<li>态势感知</li>\n</ol>\n</li>\n<li>智慧城市发展成熟度：\n<ol>\n<li>一级（规划级）：对发展策划</li>\n<li>二级（管理级）：明确发展战略</li>\n<li>三级 (协同级)：管控发展目标</li>\n<li>四级（优化级）：聚焦发展深度融合</li>\n<li>五级（引领级）：构建敏捷发展能力</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"数字化转型与元宇宙\"><a class=\"anchor\" href=\"#数字化转型与元宇宙\">#</a> 数字化转型与元宇宙</h2>\n<ol>\n<li>元宇宙主要特征：\n<ol>\n<li>沉浸式体验</li>\n<li>虚拟身份</li>\n<li>虚拟经济</li>\n<li>虚拟社会治理</li>\n</ol>\n</li>\n<li>左鹏飞从时空性、真实性、独立性、连接线四个方面去交叉定义元宇宙。</li>\n<li>元宇宙的核心技术：\n<ol>\n<li>扩展现实技术</li>\n<li>数字孪生</li>\n<li>用<strong>区块链</strong>搭建经济体系</li>\n</ol>\n</li>\n</ol>\n<h1 id=\"信息技术发展\"><a class=\"anchor\" href=\"#信息技术发展\">#</a> 信息技术发展</h1>\n<p>信息技术是在<strong>信息科学</strong>的基础原理和方法下，<strong>获取信息、处理信息、传输信息和使用信息</strong>的应用技术总称。</p>\n<h2 id=\"信息技术及其发展\"><a class=\"anchor\" href=\"#信息技术及其发展\">#</a> 信息技术及其发展</h2>\n<h3 id=\"计算机网络\"><a class=\"anchor\" href=\"#计算机网络\">#</a> 计算机网络</h3>\n<ol>\n<li>从网络作用范围划分：\n<ol>\n<li>个人局域网</li>\n<li>局域网</li>\n<li>城域网</li>\n<li>广域网：ppp 点对点协议、isdn 综合业务数字网。。。</li>\n<li>公用网</li>\n<li>专用网</li>\n</ol>\n</li>\n<li>OSI 七层网络模型：应用层、表示层、会话层、传输层、网络层、数据链路层、物理层</li>\n<li>以太网规范 IEEE 802.3 是重要的局域网协议</li>\n<li>TCP/IP 是 internet 的核心\n<ol>\n<li>应用层（应用层、表示层、会话层）：\n<ol>\n<li>FTP（文件传输协议）：TCP  21 号端口传送控制信息  20 号端口传送文件内容</li>\n<li>TFTP（简单文本传输协议）：UDP</li>\n<li>HTTP (超文本传输协议)：www 服务器</li>\n<li>SMTP（简单邮件传输协议）：TCP</li>\n<li>DHCP（动态主机配置协议）：UDP</li>\n<li>Telnet（远程登陆协议）TCP</li>\n<li>DNS（域名系统）UDP</li>\n<li>SNMP（简单网络管理协议</li>\n</ol>\n</li>\n<li>传输层（传输层）：负责提供流量控制、错误校验和排序服务\n<ol>\n<li>TCP (特靠谱) ：可靠，面向连接，传输数据量少</li>\n<li>UDP: 不可靠，无连接，传输数据量大</li>\n</ol>\n</li>\n<li>网际互连层（网络层）：网络层处理信息的路由和主机地址解析\n<ol>\n<li>IP: 无连接，不可靠</li>\n<li>ICMP：发送错误报文</li>\n<li>IGMP：网际组管理协议</li>\n<li>ARP（地址解析协议）：动态完成 IP 到物理地址转换</li>\n<li>RARP（反地址解析协议）: 物理地址到 ip 转换</li>\n</ol>\n</li>\n<li>网络接口层（数据链路层、物理层）</li>\n</ol>\n</li>\n<li>软件定义网络 SDN 是一种新型网络创新架构，是网络虚拟化的一种实现方式。</li>\n<li>SDN 将数据与控制分离，在控制层有逻辑中心化和可编程控制器；在数据层，有哑交换机，提供数据转发；两层采用开发统一接口（OpenFlow）进行交互。</li>\n<li>SDN 由下到上分为：数据平面、控制平面、应用平面</li>\n<li>SDN 南向接口负责与数据平面进行通信，采用 OpenFlow 协议，东向接口负责多控制器之间的通信，北向接口负责与应用平面通信。</li>\n<li>5G 是具有高速率、低时延、大连接的新一代移动通信技术，同时支持中低频和高频频段</li>\n<li>5G 三大应用场景：增强移动宽带（eMBB）、超高可靠低时延通信（uRLLC)、海量机器类通信（mMTC）</li>\n</ol>\n<h3 id=\"存储和数据库\"><a class=\"anchor\" href=\"#存储和数据库\">#</a> 存储和数据库</h3>\n<ol>\n<li>根据服务器类型分类：封闭系统和开放系统</li>\n<li>开放系统：\n<ol>\n<li>内置存储</li>\n<li>外挂存储\n<ol>\n<li>直连式存储（DAS）: 不易扩展</li>\n<li>网络化存储：根据传输协议分为\n<ol>\n<li>网络接入存储（NAS)：有自文件系统，采用文件共享存储方式可用 TCP/IP 作为网络传输协议</li>\n<li>存储区域网络 (SAN)：块级存储，</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>存储虚拟化是 “云存储” 的核心技术之一</li>\n<li><strong>数据结构模型</strong>是数据库系统的核心\n<ol>\n<li>层次模型：树结构</li>\n<li>网状模型：网状结构</li>\n<li>关系模型：二维表格</li>\n</ol>\n</li>\n<li>层次模型和网状模型又统称为格式化模型</li>\n<li>根据存储方式分类：\n<ol>\n<li>关系型数据库：ACID 原子性、一致性、隔离性、持久性    容易理解、使用方便、便于维护</li>\n<li>非关系型数据库：分布式 非关系型 不遵循 ACID  高并发、简单、易扩展、可伸缩   事务性支持弱  MongoDB\n<ol>\n<li>键值数据库：简单易部署高并发</li>\n<li>列存储数据库：应对分布式存储海量数据</li>\n<li>面向 文档数据库</li>\n<li>图形数据库</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>数据仓库是一个面向主题、集成的、非易失的且随时间变化的数据集合，用于支持管理决策。</li>\n<li>数据仓库结构包括：\n<ol>\n<li>数据源：数据仓库的基础，整个系统的数据源泉</li>\n<li>数据的存储与管理：整个数据仓库系统的核心</li>\n<li>联机分析处理（OLAP）服务器:</li>\n<li>前端工具：查询、报表、分析、数据挖掘工具</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"信息安全\"><a class=\"anchor\" href=\"#信息安全\">#</a> 信息安全</h3>\n<ol>\n<li>数据本身的属性\n<ol>\n<li>保密性：不被未授权者知晓</li>\n<li>完整性：正确、真实、未被篡改</li>\n<li>可用性：随时正常使用</li>\n</ol>\n</li>\n<li>针对信息系统，安全的四个层级：设备安全、数据安全、内容安全、行为安全</li>\n<li>加密技术的两个元素：算法和密钥    为了保证信息的安全性</li>\n<li>对称密钥加密体制  对称加密（私人密钥加密）DES</li>\n<li>非对称密钥体制    非对称加密（公开密钥加密) RSA</li>\n<li>网络安全态势感知是一种基于环境的、动态的、整体的洞悉安全风险的能力，前提是大数据</li>\n</ol>\n<h2 id=\"新一代信息技术及应用\"><a class=\"anchor\" href=\"#新一代信息技术及应用\">#</a> 新一代信息技术及应用</h2>\n<h3 id=\"物联网\"><a class=\"anchor\" href=\"#物联网\">#</a> 物联网</h3>\n<ol>\n<li>物联网架构：感知层、网络层、应用层</li>\n<li>关键技术：传感器技术、传感网、应用系统框架</li>\n</ol>\n<h3 id=\"云计算\"><a class=\"anchor\" href=\"#云计算\">#</a> 云计算</h3>\n<ol>\n<li>云计算是分布式计算的一种，实现了快速、按需、弹性的服务</li>\n<li>云计算服务提供的资源层次：\n<ol>\n<li>基础设施即服务（IaaS）：提供计算机能力存储空间</li>\n<li>平台即服务（PaaS）：提供操作系统、</li>\n<li>软件即服务（SaaS）：提供应用软件</li>\n</ol>\n</li>\n<li>关键技术：虚拟化技术、云存储技术、多租户和访问控制管理、云安全技术</li>\n</ol>\n<h3 id=\"大数据\"><a class=\"anchor\" href=\"#大数据\">#</a> 大数据</h3>\n<ol>\n<li>特点：体量大、结构多样、时效性强</li>\n<li>特征：数据海量、数据类型多样、数据价值密度低、数据处理速度快</li>\n<li>关键技术：大数据获取技术、分布式数据处理技术、大数据管理技术、大数据应用和服务技术</li>\n</ol>\n<h3 id=\"区块链\"><a class=\"anchor\" href=\"#区块链\">#</a> 区块链</h3>\n<ol>\n<li>区块链技术具有多中心化、隐私保护、防篡改等特点提供了开放、分散和容错的事物机制</li>\n<li>区块链分为公有链、联盟链、私有链、混合链</li>\n<li>典型特征\n<ol>\n<li>多中心化</li>\n<li>多方维护</li>\n<li>时序数据</li>\n<li>智能合约</li>\n<li>不可篡改</li>\n<li>开放共识</li>\n<li>安全可信</li>\n</ol>\n</li>\n<li>关键技术：分布式账本、加密算法、共识机制</li>\n</ol>\n<h3 id=\"人工智能\"><a class=\"anchor\" href=\"#人工智能\">#</a> 人工智能</h3>\n<ol>\n<li>关键技术：\n<ol>\n<li>机器学习；自动将模型与数据匹配</li>\n<li>自然语言处理：机器翻译、舆情监测</li>\n<li>专家系统：模拟人类专家解决领域问题的计算机程序系统</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"虚拟现实\"><a class=\"anchor\" href=\"#虚拟现实\">#</a> 虚拟现实</h3>\n<ol>\n<li>技术特征：沉浸性、交互性、多感知性、构想性和自主性</li>\n<li>关键技术：人机交互技术、传感器技术、动态环境建模技术和系统集成技术</li>\n</ol>\n<h1 id=\"信息系统治理\"><a class=\"anchor\" href=\"#信息系统治理\">#</a> 信息系统治理</h1>\n<h2 id=\"it治理\"><a class=\"anchor\" href=\"#it治理\">#</a> IT 治理</h2>\n<ol>\n<li>it 治理是组织开展信息技术以及应用活动的重要管控手段，也是组织治理的重要组成部分。</li>\n<li>it 治理起统筹、评估、指导、监督作用。</li>\n<li>信息技术审计（it 审计）是 it 治理不可 缺少的评估和监督工具，重点承担着组织信息系统发展的合规性检测以及信息技术风险的管控等职能。</li>\n</ol>\n<h3 id=\"it治理基础\"><a class=\"anchor\" href=\"#it治理基础\">#</a> IT 治理基础</h3>\n<p>​</p>\n<ol>\n<li>it 治理三大目标：\n<ol>\n<li>与业务目标一致</li>\n<li>有效利用信息与数据资源</li>\n<li>风险管理</li>\n</ol>\n</li>\n<li>it 治理的管理层：\n<ol>\n<li>最高管理层：证实 IT 战略与业务战略是否一致，证实价值，指导 it 战略，平衡投资，指导资源分配</li>\n<li>执行管理层：制定 IT 目标，分析新技术的机遇和风险，分配责任，衡量业绩</li>\n<li>业务与服务执行层：信息和数据服务的提供和支持，it 基础设施和维护，it 需求的提出和响应</li>\n</ol>\n</li>\n<li>it 治理的五项关键决策：\n<ol>\n<li>it 原则</li>\n<li>it 架构</li>\n<li>it 基础设施</li>\n<li>业务应用需求</li>\n<li>it 投资和优先顺序 c</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"it治理体系框架\"><a class=\"anchor\" href=\"#it治理体系框架\">#</a> it 治理体系框架</h3>\n<ol>\n<li>it 治理体系框架是实现组织 it 治理的有效保障，以组织战略目标为导向；包括\n<ol>\n<li>it 战略目标</li>\n<li>it 治理组织</li>\n<li>it 治理机制</li>\n<li>it 治理标准</li>\n<li>it 绩效目标</li>\n</ol>\n</li>\n<li>it 治理的六大核心内容\n<ol>\n<li>组织职责</li>\n<li>战略匹配</li>\n<li>资源管理</li>\n<li>价值交付</li>\n<li>风险管理</li>\n<li>绩效管理</li>\n</ol>\n</li>\n<li>建立 it 治理机制的原则\n<ol>\n<li>简单</li>\n<li>透明</li>\n<li>适合</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"it治理任务\"><a class=\"anchor\" href=\"#it治理任务\">#</a> it 治理任务</h3>\n<ol>\n<li>it 治理活动聚焦五个方面\n<ol>\n<li>全局统筹</li>\n<li>价值导向</li>\n<li>机制保障</li>\n<li>创新发展</li>\n<li>文化助推</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"it治理方法与标准\"><a class=\"anchor\" href=\"#it治理方法与标准\">#</a> it 治理方法与标准</h3>\n<ol>\n<li>it 治理通用要求适用于  第一部分：\n<ol>\n<li>建立组织的 it 治理体系并实施自我评价</li>\n<li>开展信息技术审计</li>\n<li>研发、选择和评价 it 治理相关的软件或解决方案</li>\n<li>第三方对组织的 it 治理能力评价</li>\n</ol>\n</li>\n<li>iso/iec38500 标准规定治理机构应通过 评估、指导和监督三个主要任务来治理 it</li>\n</ol>\n<h2 id=\"it审计\"><a class=\"anchor\" href=\"#it审计\">#</a> IT 审计</h2>\n<h3 id=\"it审计基础\"><a class=\"anchor\" href=\"#it审计基础\">#</a> it 审计基础</h3>\n<ol>\n<li>it 审计风险包括：\n<ol>\n<li>固有风险：审核人员只能评估，无法控制影响</li>\n<li>控制风险：与内部控制制度执行的有效性有关</li>\n<li>检车风险：</li>\n</ol>\n</li>\n<li>it 审计范围\n<ol>\n<li>总体范围：根据审计目的和投入来确定</li>\n<li>组织范围：设计组织机构</li>\n<li>物理范围：具体物理地点和边界</li>\n<li>逻辑范围：涉及信息系统和逻辑边界</li>\n</ol>\n</li>\n<li>it 审计目标\n<ol>\n<li>组织的 it 战略应与业务战略保持一致</li>\n<li>保护信息资产的安全及数据的完整、可靠、有效</li>\n<li>提高信息系统的安全性、可靠性及有效性</li>\n<li>合理保证信息系统及其运用符合有关法律、法规</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"审计方法与技术\"><a class=\"anchor\" href=\"#审计方法与技术\">#</a> 审计方法与技术</h3>\n<ol>\n<li>常用方法\n<ol>\n<li>访谈法：面对面交谈</li>\n<li>调查法：书面口头问题收集资料</li>\n<li>检查法：对文件审查</li>\n<li>观察法：到被审查单位</li>\n<li>测试法：计算机输入</li>\n<li>程序代码检查法：对代码逐条检查</li>\n</ol>\n</li>\n<li>it 审计技术：风险评估技术、审计抽样技术、计算机辅助审计技术、大数据审计技术</li>\n<li>it 审计证据特性：\n<ol>\n<li>充分性</li>\n<li>客观性</li>\n<li>相关性</li>\n<li>可靠性</li>\n<li>合法性</li>\n</ol>\n</li>\n<li>it 审计底稿\n<ol>\n<li>综合类工作底稿：审计计划阶段和审计报告阶段</li>\n<li>业务类工作底稿：审计实施阶段</li>\n<li>备查类工作底稿：审计过程</li>\n</ol>\n</li>\n<li>审计底稿三层复核制度：审计机构负责人、部门负责人、项目负责人</li>\n</ol>\n<h3 id=\"it审计流程\"><a class=\"anchor\" href=\"#it审计流程\">#</a> it 审计流程</h3>\n<pre><code>1. 审计流程：\n \t1. 审计准备: 明确任务、组件项目组、收集信息、编制审计计划\n \t2. 审计实施：深入调查并调整计划、了解并初步评估it内部控制，进行符合性测试、进行实质性测试\n \t3. 审计终结、\n \t4. 后续审计\n</code></pre>\n<h3 id=\"it审计内容\"><a class=\"anchor\" href=\"#it审计内容\">#</a> it 审计内容</h3>\n<ol>\n<li>it 审计业务和服务分为：\n<ol>\n<li>it 内部控制审计：组织层面 it 控制审计、it 一般控制审计、应用控制审计</li>\n<li>it 专项审计：信息系统生命周期审计、信息系统开发过程审计、信息系统运行维护审计、网络与信息安全审计、信息系统项目审计、数据审计等</li>\n</ol>\n</li>\n</ol>\n<p>​</p>\n<h1 id=\"信息系统管理\"><a class=\"anchor\" href=\"#信息系统管理\">#</a> 信息系统管理</h1>\n<p>信息系统刊是以像需要组织各层级充分参与的业务运行工作。</p>\n<h2 id=\"管理方法\"><a class=\"anchor\" href=\"#管理方法\">#</a> 管理方法</h2>\n<ol>\n<li>信息系统四个要素：人员、技术、流程和数据</li>\n<li>信息系统的四大领域：\n<ol>\n<li>规划和组织：战略</li>\n<li>设计和实施：定义采购和实施</li>\n<li>运维和服务：运行交付</li>\n<li>优化和持续改进：内部性能指标</li>\n</ol>\n</li>\n<li>战略是实现目标、意图和目的的一组协调行动</li>\n<li>信息系统战略包括：总成本战略、差异性战略、专注化战略</li>\n<li>信息系统架构模式\n<ol>\n<li>集中式架构：主机架构</li>\n<li>分布式架构：基于服务器架构</li>\n<li>面向服务的系统架构：基于 web 的架构</li>\n</ol>\n</li>\n<li>PDCA 戴明环 ：plan、do、check、act</li>\n<li>六西格玛五阶段方法 DMAIC/DMADV:\n<ol>\n<li>定义 define</li>\n<li>度量 measure</li>\n<li>分析 analysis</li>\n<li>改进 / 设计 improve/design</li>\n<li>控制 / 验证 control/verify</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"管理要点\"><a class=\"anchor\" href=\"#管理要点\">#</a> 管理要点</h2>\n<ol>\n<li>数据管理能力成熟度评估模型 DCMM 定义了：\n<ol>\n<li>数据战略：数据战略规划、数据战略实施、数据战略评估</li>\n<li>数据治理</li>\n<li>数据架构</li>\n<li>数据应用</li>\n<li>数据安全</li>\n<li>数据质量</li>\n<li>数据标准</li>\n<li>数据生存周期</li>\n</ol>\n</li>\n<li>it 运维能力的关键指标：人员、过程、技术、资源能力</li>\n</ol>\n<h1 id=\"信息系统工程\"><a class=\"anchor\" href=\"#信息系统工程\">#</a> 信息系统工程</h1>\n<h2 id=\"软件工程\"><a class=\"anchor\" href=\"#软件工程\">#</a> 软件工程</h2>\n<ol>\n<li>软件架构风格：\n<ol>\n<li>数据流风格：管道 / 过滤器</li>\n<li>调用 / 返回风格：主程序 / 子程序</li>\n<li>独立构建风格：进程通信</li>\n<li>虚拟机风格：解释器</li>\n<li>仓库风格：数据库系统</li>\n</ol>\n</li>\n<li>软件架构为软件技术提供了高级抽象，关注软件复用</li>\n<li>需求包括业务需求、用户需求、系统需求</li>\n<li>质量功能部署 QFD 将需求分为：常规需求、期望需求、意外需求</li>\n<li>需求过程：需求获取、需求分析、需求规格说明书编制、需求验证与确认</li>\n<li>结构化分析的核心是数据字典\n<ol>\n<li>E-R 图：数据模型</li>\n<li>数据流图 DFD：功能模型</li>\n<li>状态转换图：行为模型 STD</li>\n</ol>\n</li>\n<li>软件需求规格说明书 SRS 是需求开发活动的产物</li>\n<li>uml 的事物分为：结构事物、行为事物、分组事物和注释事物</li>\n<li>结构化设计 SD 是一种面向数据流的方法，自顶向下，逐步求精和模块化，遵循高内聚，低耦合</li>\n</ol>\n<h2 id=\"数据工程\"><a class=\"anchor\" href=\"#数据工程\">#</a> 数据工程</h2>\n<ol>\n<li>根据模型应用目的将数据模型分为：\n<ol>\n<li>概念模型</li>\n<li>逻辑模型</li>\n<li>物理模型</li>\n</ol>\n</li>\n<li>数据建模过程包括数据需求分析、概念模型设计、逻辑模型设计、物理模型设计</li>\n<li>数据标准 化是实现数据共享的基础，包括：\n<ol>\n<li>元数据标准化</li>\n<li>数据元标准化</li>\n<li>数据模式标准化</li>\n<li>数据分类编码标准化</li>\n<li>数据标准化管理</li>\n</ol>\n</li>\n<li>数据可视化表现方式：一维。二维、三维、多维、时态数据可视化、层次数据可视化、网络数据可视化</li>\n</ol>\n<h2 id=\"系统集成\"><a class=\"anchor\" href=\"#系统集成\">#</a> 系统集成</h2>\n<h2 id=\"安全工程\"><a class=\"anchor\" href=\"#安全工程\">#</a> 安全工程</h2>\n",
            "tags": [
                "软考",
                "信息系统项目管理师",
                "软考",
                "高项"
            ]
        },
        {
            "id": "http://example.com/2023/10/23/s/",
            "url": "http://example.com/2023/10/23/s/",
            "title": "s",
            "date_published": "2023-10-23T02:38:14.000Z",
            "content_html": "",
            "tags": []
        },
        {
            "id": "http://example.com/2023/09/05/%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E6%B2%BB%E7%90%86/",
            "url": "http://example.com/2023/09/05/%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E6%B2%BB%E7%90%86/",
            "title": "信息系统治理",
            "date_published": "2023-09-05T04:35:50.000Z",
            "content_html": "<h1 id=\"it治理\"><a class=\"anchor\" href=\"#it治理\">#</a> IT 治理 *</h1>\n<p>信息系统治理（IT）治理起到<strong>统筹、评估、指导和监督</strong>的作用。</p>\n<h2 id=\"it治理基础\"><a class=\"anchor\" href=\"#it治理基础\">#</a> IT 治理基础</h2>\n<p>it 治理主要目标：</p>\n<ol>\n<li>与业务目标一致</li>\n<li>有效利用信息与数据资源</li>\n<li>风险管理</li>\n</ol>\n<p>it 治理的管理层次：</p>\n<ol>\n<li>最高管理层：证实 it 战略与业务战略是否一致</li>\n<li>执行管理层：制定 it 的目标；分析新技术的机遇和风险</li>\n<li>业务与服务执行层：信息和数据服务的提供和支持</li>\n</ol>\n",
            "tags": [
                "软考",
                "信息系统项目管理师",
                "软考",
                "高项"
            ]
        },
        {
            "id": "http://example.com/2023/08/30/%E4%BF%A1%E6%81%AF%E6%8A%80%E6%9C%AF%E5%8F%91%E5%B1%95/",
            "url": "http://example.com/2023/08/30/%E4%BF%A1%E6%81%AF%E6%8A%80%E6%9C%AF%E5%8F%91%E5%B1%95/",
            "title": "信息技术发展",
            "date_published": "2023-08-30T15:54:51.000Z",
            "content_html": "<h1 id=\"信息技术及其发展\"><a class=\"anchor\" href=\"#信息技术及其发展\">#</a> 信息技术及其发展</h1>\n<p>上午题 2-3 分</p>\n<h2 id=\"计算机网络\"><a class=\"anchor\" href=\"#计算机网络\">#</a> 计算机网络 *</h2>\n<p>从作用范围可划分为：</p>\n<ul>\n<li>个人局域网（PAN)</li>\n<li>局域网 (LAN)</li>\n<li>城域网 (MAN)</li>\n<li>广域网 (WAN)</li>\n<li>公用网 ()</li>\n<li>专用网</li>\n</ul>\n<h3 id=\"osi七层网络模型\"><a class=\"anchor\" href=\"#osi七层网络模型\">#</a> OSI 七层网络模型 *</h3>\n<p><img data-src=\"./1.png\" alt=\"1\"></p>\n<h3 id=\"ieee-802协议族\"><a class=\"anchor\" href=\"#ieee-802协议族\">#</a> IEEE 802 协议族 *</h3>\n<p>IEEE 802 规范包括：</p>\n<ul>\n<li>802.1：802 协议概论</li>\n<li>802.2：逻辑链路控制层</li>\n<li><strong>802.3：以太网的 CSMA/CD 载波监听多路访问 / 冲突检测协议</strong>，<strong>重要的局域网协议</strong></li>\n<li>802.4：令牌总线 Token Bus 协议</li>\n<li>802.5：令牌环 Token Ring 协议</li>\n<li>802.6：城域网 MAN 协议</li>\n<li>802.7：FDDI 宽带技术协议</li>\n<li>802.8：光纤技术协议</li>\n<li>802.9：局域网上的语音 / 数据集成规范</li>\n<li>802.10：局域网安全互操作标准</li>\n<li><strong>802.11：无线局域网 WLAN 标准协议</strong></li>\n</ul>\n<h3 id=\"tcpip\"><a class=\"anchor\" href=\"#tcpip\">#</a> TCP/IP*</h3>\n<p>TCP/IP 是 Internet 的核心</p>\n<p><img data-src=\"./2.png\" alt=\"2\"></p>\n<h3 id=\"应用层协议\"><a class=\"anchor\" href=\"#应用层协议\">#</a> 应用层协议 *</h3>\n<ol>\n<li>FTP：文件传输协议</li>\n<li>TFTP：简单文件传输协议</li>\n<li>HTTP：超文本传输协议</li>\n<li>SMTP：简单邮件传输协议</li>\n<li>DHCP：动态主机配置协议</li>\n<li>Telnet：远程登陆协议</li>\n<li>DNS：域名系统</li>\n<li>SNMP：简单网络管理协议</li>\n</ol>\n<h3 id=\"传输层协议\"><a class=\"anchor\" href=\"#传输层协议\">#</a> 传输层协议 *</h3>\n<ul>\n<li>TCP: 可靠，面向连接，传输数据量少</li>\n<li>UDP：不可靠，无连接，检错弱，适合传输大量数据</li>\n</ul>\n<h3 id=\"网络层协议\"><a class=\"anchor\" href=\"#网络层协议\">#</a> 网络层协议 *</h3>\n<p><strong>处理信息的路由和主机地址解析</strong></p>\n<ol>\n<li>IP：无连接，不可靠</li>\n<li>ICMP（网络控制报文协议）：</li>\n<li>IGMP（网络组管理协议）：</li>\n<li>ARP (地址解析协议)</li>\n<li>RARP（反向地址解析协议）</li>\n</ol>\n<h3 id=\"软件定义网路sdn\"><a class=\"anchor\" href=\"#软件定义网路sdn\">#</a> 软件定义网路 *（SDN）</h3>\n<p>一种新型网络创新架构，将数据与控制分层</p>\n<p>由下到上分别是数据平面 -（--》FlowTable 协议 ---》）控制平面和应用平面</p>\n<h3 id=\"计算机网络-2\"><a class=\"anchor\" href=\"#计算机网络-2\">#</a> 计算机网络 *</h3>\n<h3 id=\"第五代移动通信技术5g\"><a class=\"anchor\" href=\"#第五代移动通信技术5g\">#</a> 第五代移动通信技术 5G*</h3>\n<p>特点：高速率，低时延，大连接，同时支持中低频和高频频段</p>\n<p>三大应用场景：</p>\n<ol>\n<li>增强移动宽带（eMBB)</li>\n<li>超高可靠低时延通信（uRLLC）</li>\n<li>海量机器类通信（mMTC)</li>\n</ol>\n<h2 id=\"存储和数据库\"><a class=\"anchor\" href=\"#存储和数据库\">#</a> 存储和数据库</h2>\n<h3 id=\"存储技术\"><a class=\"anchor\" href=\"#存储技术\">#</a> 存储技术 *</h3>\n<p>根据服务器类型分：</p>\n<ul>\n<li>封闭系统的存储</li>\n<li>开发系统的存储\n<ul>\n<li>内置存储</li>\n<li>外挂存储\n<ul>\n<li>直连式存储（DAS）</li>\n<li>网络化存储（FAS）\n<ul>\n<li>网络接入存储 (NAS)</li>\n<li>存储区域网络（SAN)</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"网络存储技术\"><a class=\"anchor\" href=\"#网络存储技术\">#</a> 网络存储技术</h3>\n<ol>\n<li>DAS：直连模式，不易扩展</li>\n<li>NAS：有自的文件系统，可以用 TCP/IP 作为其网络传输协议，文件共享存取方式</li>\n<li>SAN：是块级存储，不是文件共享方式</li>\n</ol>\n<h3 id=\"存储虚拟化\"><a class=\"anchor\" href=\"#存储虚拟化\">#</a> 存储虚拟化 *</h3>\n<p><strong>是 “云存储” 的核心技术之一</strong></p>\n<p>存储虚拟化使存储设备能够转换为逻辑数据存储</p>\n<h3 id=\"绿色存储\"><a class=\"anchor\" href=\"#绿色存储\">#</a> 绿色存储 *</h3>\n<p>目的：节能环保</p>\n<h3 id=\"数据结构模型\"><a class=\"anchor\" href=\"#数据结构模型\">#</a> 数据结构模型 *</h3>\n<p><strong>数据结构模型是数据库系统的核心</strong></p>\n<p>常见有三种：</p>\n<ol>\n<li>层次模型：树结构（最早使用）</li>\n<li>网状模型：网状结构</li>\n<li>关系模型：二位表格</li>\n</ol>\n<p>层次模型和网状模型又统称格式化模型</p>\n<h3 id=\"两种常见数据库类型\"><a class=\"anchor\" href=\"#两种常见数据库类型\">#</a> 两种常见数据库类型 *</h3>\n<p>关系数据库：遵循 ACID 原则 即：</p>\n<ul>\n<li>原子性</li>\n<li>一致性</li>\n<li>隔离性</li>\n<li>持久性</li>\n</ul>\n<p>优点：容易理解，使用方便，易于维护</p>\n<p>非关系数据库：分布式，非关系型，不保证遵守 ACID 原则</p>\n<p>优点：高并发，基本支持分布式，简单，易于扩展，可伸缩</p>\n<p>缺点：事物支持较弱，通用性差，无完整越苏，复杂业务场景支持较差</p>\n<p>常见的非关系数据库有：</p>\n<ul>\n<li>键值数据库：简单，易部署，高并发</li>\n<li>列存储数据库：通常来应对分布式存储海量数据</li>\n<li>面向文档数据库：键值数据库升级版</li>\n<li>图形数据库：</li>\n</ul>\n<h3 id=\"数据仓库\"><a class=\"anchor\" href=\"#数据仓库\">#</a> 数据仓库 *</h3>\n<p>数据仓库是一个面向主题的、集成的、非易失的且随时间变化的数据集合，用于管理决策。</p>\n<p>基本概念：</p>\n<ol>\n<li>清洗 / 转换 / 加载：</li>\n<li>元数据</li>\n<li>粒度：细化程度越高，粒度级越小；越小，越大</li>\n<li>分割；</li>\n<li>数据集市</li>\n<li>操作数据存储</li>\n<li>数据模型</li>\n<li>人工关系：</li>\n</ol>\n<p>数据仓库系统结构的四个层次：</p>\n<ol>\n<li>数据源</li>\n<li>数据的存储与管理</li>\n<li>OLAP 服务器</li>\n<li>前端工具</li>\n</ol>\n<p><strong>数据源是基础，数据的存储与管理是核心。</strong></p>\n<h2 id=\"信息安全\"><a class=\"anchor\" href=\"#信息安全\">#</a> 信息安全</h2>\n<h3 id=\"数据的三种安全属性\"><a class=\"anchor\" href=\"#数据的三种安全属性\">#</a> 数据的三种安全属性</h3>\n<ol>\n<li>保密性：信息不被未授权者知晓</li>\n<li>完整性：信息是正确的、真实的、未被篡改的、完整无缺的属性</li>\n<li>可用性：信息可以随时正常使用的属性</li>\n</ol>\n<h3 id=\"信息系统安全的四个层级\"><a class=\"anchor\" href=\"#信息系统安全的四个层级\">#</a> 信息系统安全的四个层级</h3>\n<ol>\n<li>设备安全</li>\n<li>数据安全：静态安全，传统的信息安全</li>\n<li>内容安全：内容保密，信息隐私保护</li>\n<li>行为安全：动态安全</li>\n</ol>\n<h3 id=\"加密解密\"><a class=\"anchor\" href=\"#加密解密\">#</a> 加密解密 *</h3>\n<p>加密的两个元素：</p>\n<ul>\n<li>算法</li>\n<li>密钥\n<ul>\n<li>对称密钥：对称加密（私人密钥加密）</li>\n<li>非对称密钥：非对称加密（公开密钥加密）</li>\n</ul>\n</li>\n</ul>\n<p>非对称加密 RSA，加密密钥公开，解密密钥保密</p>\n<h3 id=\"安全行为分析技术\"><a class=\"anchor\" href=\"#安全行为分析技术\">#</a> 安全行为分析技术 *</h3>\n<p>用户和实体行为分析（UEBA) 系统包括：</p>\n<ul>\n<li>数据获取层</li>\n<li>算法分析层</li>\n<li>场景应用层</li>\n</ul>\n<h3 id=\"网络安全态势感知\"><a class=\"anchor\" href=\"#网络安全态势感知\">#</a> 网络安全态势感知 *</h3>\n<p>是一种基于环境的、动态的、整体的洞悉安全风陷的能力</p>\n<p>关键技术主要包括：</p>\n<ul>\n<li>改良多元异构数据的护具融合技术</li>\n<li>面向多累型的网络安全威胁评估技术</li>\n<li>网络安全态势评估与决策支撑技术</li>\n<li>网络安全态势可视化</li>\n</ul>\n<h1 id=\"新一代信息技术及应用\"><a class=\"anchor\" href=\"#新一代信息技术及应用\">#</a> 新一代信息技术及应用</h1>\n<h2 id=\"物联网\"><a class=\"anchor\" href=\"#物联网\">#</a> 物联网 *</h2>\n<p>物联网的三层架构：</p>\n<ol>\n<li>感知层：RFID 射频技术</li>\n<li>网络层</li>\n<li>应用层</li>\n</ol>\n<p>物联网的关键技术：</p>\n<ol>\n<li>传感器技术</li>\n<li>传感网</li>\n<li>应用系统框架</li>\n</ol>\n<h3 id=\"云计算\"><a class=\"anchor\" href=\"#云计算\">#</a> 云计算 *</h3>\n<p>是分布式计算的一种</p>\n<p>根据资源层次分为：</p>\n<ol>\n<li>基础设施即服务（IaaS)</li>\n<li>平台即服务（Pass）</li>\n<li>软件即服务（SaaS)</li>\n</ol>\n<p>关键技术：</p>\n<ol>\n<li>虚拟化技术</li>\n<li>云存储技术</li>\n<li>多租户和访问控制管理</li>\n<li>云安全技术</li>\n</ol>\n<h2 id=\"大数据\"><a class=\"anchor\" href=\"#大数据\">#</a> 大数据 *</h2>\n<p>特征：</p>\n<ul>\n<li>海量数据</li>\n<li>数据类型多样</li>\n<li>数据价值密度低</li>\n<li>数据处理速度快</li>\n</ul>\n<p>关键技术：</p>\n<ol>\n<li>大数据获取技术</li>\n<li>分布式数据处理技术</li>\n<li>大数据管理技术</li>\n<li>大数据应用和服务技术</li>\n</ol>\n<h2 id=\"区块链\"><a class=\"anchor\" href=\"#区块链\">#</a> 区块链 *</h2>\n<p>分类：</p>\n<ol>\n<li>公有链</li>\n<li>联盟链</li>\n<li>私有链</li>\n<li>混合链</li>\n</ol>\n<p>特征：</p>\n<ol>\n<li>多中心化</li>\n<li>多方维护</li>\n<li>时序数据</li>\n<li>不可篡改</li>\n<li>开放共识</li>\n<li>安全可信</li>\n</ol>\n<p>关键技术：</p>\n<ol>\n<li>分布式账本</li>\n<li>加密算法</li>\n<li>共识机制</li>\n</ol>\n<h2 id=\"人工智能\"><a class=\"anchor\" href=\"#人工智能\">#</a> 人工智能 *</h2>\n<p>关键技术：</p>\n<ol>\n<li>机器学习</li>\n<li>自然语言处理</li>\n<li>专家系统</li>\n</ol>\n<h2 id=\"虚拟现实\"><a class=\"anchor\" href=\"#虚拟现实\">#</a> 虚拟现实 *</h2>\n<p>特征：</p>\n<ol>\n<li>沉浸性</li>\n<li>交互性</li>\n<li>多感知性</li>\n<li>构想性 / 想象性</li>\n<li>自主性</li>\n</ol>\n<p>关键技术：</p>\n<ol>\n<li>人机交互技术</li>\n<li>传感器技术</li>\n<li>动态环境建模技术</li>\n<li>系统集成技术</li>\n</ol>\n",
            "tags": [
                "软考",
                "信息系统项目管理师",
                "软考",
                "高项"
            ]
        },
        {
            "id": "http://example.com/2023/08/29/%E4%BF%A1%E6%81%AF%E5%8C%96%E5%8F%91%E5%B1%95/",
            "url": "http://example.com/2023/08/29/%E4%BF%A1%E6%81%AF%E5%8C%96%E5%8F%91%E5%B1%95/",
            "title": "信息化发展",
            "date_published": "2023-08-29T14:47:51.000Z",
            "content_html": "<h1 id=\"信息与信息化\"><a class=\"anchor\" href=\"#信息与信息化\">#</a> 信息与信息化</h1>\n<p>信息是一种普遍联系的形式</p>\n<h2 id=\"信息掌握\"><a class=\"anchor\" href=\"#信息掌握\">#</a> 信息（掌握）</h2>\n<h3 id=\"定义\"><a class=\"anchor\" href=\"#定义\">#</a> 定义</h3>\n<p>信息是用来消除随机不定性的东西（香农）</p>\n<p>单位：比特（bit）</p>\n<h3 id=\"特征与质量\"><a class=\"anchor\" href=\"#特征与质量\">#</a> 特征与质量</h3>\n<p>特征</p>\n<ul>\n<li>客观性</li>\n<li>普遍性</li>\n<li>无限性</li>\n<li>动态性</li>\n<li>相对性</li>\n<li>依附性</li>\n<li>变换性</li>\n<li>传体系</li>\n<li>层次性</li>\n<li>系统性</li>\n<li>转换性</li>\n</ul>\n<p>质量</p>\n<ul>\n<li>精确性</li>\n<li>完整性</li>\n<li>可靠性</li>\n<li>技术性</li>\n<li>经济学</li>\n<li>可验证性</li>\n<li>安全性</li>\n</ul>\n<p>应对不同场合，信息的侧重面也不一样。</p>\n<h2 id=\"信息系统\"><a class=\"anchor\" href=\"#信息系统\">#</a> 信息系统</h2>\n<h3 id=\"信息系统-2\"><a class=\"anchor\" href=\"#信息系统-2\">#</a> 信息系统</h3>\n<p>定义：</p>\n<p>​\t\t输入数据，进行加工，产生信息的系统</p>\n<p>显著特点：</p>\n<p>​\t\t面向管理和支持生产</p>\n<p>组成部分：</p>\n<p>​\t\t硬件、软件、数据库、网络、存储设备、感知设备、外设、人员以及把数据处理成信息的规程</p>\n<p>分类（用途类型划分）：</p>\n<p>​\t\t电子商务系统、事务处理系统、管理信息系统、生产制造系统、电子政务系统、决策支持系统</p>\n<h3 id=\"信息系统的生命周期\"><a class=\"anchor\" href=\"#信息系统的生命周期\">#</a> 信息系统的生命周期</h3>\n<p><img data-src=\"./1.png\" alt=\"1\"></p>\n<p>四大：立项、开发、运维、消亡</p>\n<ol>\n<li>立项（系统规划）：写可行性报告</li>\n<li>开发：\n<ol>\n<li>系统分析：提出逻辑模型</li>\n<li>系统设计：提出物理模型</li>\n<li>系统实施：将设计付诸实施</li>\n</ol>\n</li>\n<li>系统运行和维护：维护和评价，记录系统运行情况</li>\n<li>消亡</li>\n</ol>\n<p>5 小：系统规划、系统分析、系统设计、系统实施、运行维护</p>\n<h2 id=\"信息化\"><a class=\"anchor\" href=\"#信息化\">#</a> 信息化</h2>\n<h3 id=\"信息化的内涵掌握\"><a class=\"anchor\" href=\"#信息化的内涵掌握\">#</a> 信息化的内涵（掌握）</h3>\n<ol>\n<li>信息网络体系</li>\n<li>信息产业基础</li>\n<li>社会运行环境</li>\n<li>效用积累过程</li>\n</ol>\n<h3 id=\"信息化的六要素掌握\"><a class=\"anchor\" href=\"#信息化的六要素掌握\">#</a> 信息化的六要素（掌握）</h3>\n<ol>\n<li>信息技术应用</li>\n<li>信息资源</li>\n<li>信息网络</li>\n<li>信息技术和产业</li>\n<li>信息化人才</li>\n<li>信息化政策法规和标准规范</li>\n</ol>\n<h1 id=\"现代化基础设施\"><a class=\"anchor\" href=\"#现代化基础设施\">#</a> 现代化基础设施</h1>\n<h2 id=\"新型基础设施建设掌握\"><a class=\"anchor\" href=\"#新型基础设施建设掌握\">#</a> 新型基础设施建设（掌握）</h2>\n<p>简称新基建，</p>\n<p>涉及七大领域</p>\n<ol>\n<li>5G 基建</li>\n<li>特高压</li>\n<li>城际高速铁路和城际轨道交通</li>\n<li>新能源汽车充电桩</li>\n<li>大数据中心</li>\n<li>人工智能</li>\n<li>工业物联网</li>\n</ol>\n<p>包含三方面</p>\n<ol>\n<li>信息基础设施：凸显 “技术新”</li>\n<li>融合基础设施：重在 “应用新”</li>\n<li>创新基础设施：强调 “平台新”</li>\n</ol>\n<h2 id=\"工业互联网掌握\"><a class=\"anchor\" href=\"#工业互联网掌握\">#</a> 工业互联网（掌握）</h2>\n<p>是第四次工业革命的重要基石</p>\n<h3 id=\"工业互联网的四大层级\"><a class=\"anchor\" href=\"#工业互联网的四大层级\">#</a> 工业互联网的四大层级</h3>\n<ol>\n<li>网络是基础：工业互联网网络体系有三部分\n<ol>\n<li>网络互联</li>\n<li>数据互通</li>\n<li>标识解析</li>\n</ol>\n</li>\n<li>平台是中枢：平台体系包括边缘层、IaaS、PaaS、SaaS，作用如下\n<ol>\n<li>数据汇聚</li>\n<li>建模分析</li>\n<li>知识复用</li>\n<li>应用创新</li>\n</ol>\n</li>\n<li>数据是要素：工业互联网有三个特性\n<ol>\n<li>重要性</li>\n<li>专业性</li>\n<li>复杂性</li>\n</ol>\n</li>\n<li>安全是保障：工业互联网安全又三大特点\n<ol>\n<li>涉及范围广</li>\n<li>造成影响大</li>\n<li>企业防护基础弱</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"工业互联网六大典型应用模式\"><a class=\"anchor\" href=\"#工业互联网六大典型应用模式\">#</a> 工业互联网六大典型应用模式</h3>\n<ol>\n<li>平台设计</li>\n<li>智能化制造</li>\n<li>网络化协同</li>\n<li>个性化定制</li>\n<li>服务化延申</li>\n<li>数字化管理</li>\n</ol>\n<h2 id=\"车联网掌握\"><a class=\"anchor\" href=\"#车联网掌握\">#</a> 车联网（掌握）</h2>\n<p>新一代汽车</p>\n<h3 id=\"车联网的三层体系\"><a class=\"anchor\" href=\"#车联网的三层体系\">#</a> 车联网的三层体系</h3>\n<ol>\n<li>端系统</li>\n<li>管系统</li>\n<li>云系统</li>\n</ol>\n<h3 id=\"车联网的五种链接方式\"><a class=\"anchor\" href=\"#车联网的五种链接方式\">#</a> 车联网的五种链接方式</h3>\n<ol>\n<li>车与云平台</li>\n<li>车与车间</li>\n<li>车与路间</li>\n<li>车与人间</li>\n<li>车与设备间</li>\n</ol>\n<h3 id=\"车联网的场景应用\"><a class=\"anchor\" href=\"#车联网的场景应用\">#</a> 车联网的场景应用</h3>\n<ol>\n<li>实用类场景应用：自动碰撞通知、被盗车辆跟踪、道路救援</li>\n<li>便携类场景应用：信息娱乐服务</li>\n<li>效率类场景应用：车联网自己更新系统，不用去车厂</li>\n</ol>\n<h1 id=\"现代化创新发展掌握\"><a class=\"anchor\" href=\"#现代化创新发展掌握\">#</a> 现代化创新发展（掌握）</h1>\n<h2 id=\"农业农村现代化掌握\"><a class=\"anchor\" href=\"#农业农村现代化掌握\">#</a> 农业农村现代化（掌握）</h2>\n<p>农业信息化是农业现代化的重要技术手段。</p>\n<h3 id=\"乡村振兴战略掌握\"><a class=\"anchor\" href=\"#乡村振兴战略掌握\">#</a> 乡村振兴战略（掌握）</h3>\n<ol>\n<li>\n<p>建设基础设施</p>\n</li>\n<li>\n<p>发展智慧农业</p>\n</li>\n<li>\n<p>建设数字乡村</p>\n<h3 id=\"两化融合与智能制造\"><a class=\"anchor\" href=\"#两化融合与智能制造\">#</a> 两化融合与智能制造</h3>\n</li>\n</ol>\n<p>两化融合：核心是信息化支撑，追求可持续发展模式</p>\n<ol>\n<li>技术融合</li>\n<li>产品融合</li>\n<li>业务融合</li>\n<li>产业衍生</li>\n</ol>\n<p>智能制造：基于新一代信息通信技术与先进制造技术融合的新型生产方式。</p>\n<p>GB/T39116《智能制造能力成熟度模型》</p>\n<ol>\n<li>一级（规划级）：流程化管理</li>\n<li>二级（规范级）：单一数据共享</li>\n<li>三级（继承级）：跨业务数据共享</li>\n<li>四级（优化级）：精准预测和优化核心业务</li>\n<li>五级（引领级）：产业链协同并衍生新的商业模式</li>\n</ol>\n<h3 id=\"消费互联网\"><a class=\"anchor\" href=\"#消费互联网\">#</a> 消费互联网</h3>\n<p>本质是个人虚拟化，增强个人生活消费体验。</p>\n<p>基本属性：</p>\n<ul>\n<li>媒体属性</li>\n<li>产业属性</li>\n</ul>\n<h1 id=\"数字中国掌握\"><a class=\"anchor\" href=\"#数字中国掌握\">#</a> 数字中国（掌握）</h1>\n<h2 id=\"数字经济掌握\"><a class=\"anchor\" href=\"#数字经济掌握\">#</a> 数字经济（掌握）</h2>\n<p>继农业经济、工业经济之后的更高级经济形态。</p>\n<p>构成：</p>\n<ul>\n<li>数字产业化</li>\n<li>产业数字化</li>\n</ul>\n<h3 id=\"数字化治理\"><a class=\"anchor\" href=\"#数字化治理\">#</a> 数字化治理</h3>\n<p>特征：“信息技术 + 治理 &quot;</p>\n<h3 id=\"数字价值化\"><a class=\"anchor\" href=\"#数字价值化\">#</a> 数字价值化</h3>\n<p>三化框架：</p>\n<ol>\n<li>数据资源化</li>\n<li>数据资产化</li>\n<li>数据资本化</li>\n</ol>\n<h2 id=\"数字政府\"><a class=\"anchor\" href=\"#数字政府\">#</a> 数字政府</h2>\n<p>互联网 + 政府</p>\n<p>特征：</p>\n<ol>\n<li>协同化</li>\n<li>云端化</li>\n<li>智能化</li>\n<li>数据化</li>\n<li>动态化</li>\n<li>共享</li>\n<li>互通</li>\n<li>便利</li>\n</ol>\n<p>主要内容：</p>\n<ol>\n<li>一网通办</li>\n<li>跨省通办</li>\n<li>一网统管\n<ol>\n<li>一网</li>\n<li>一屏</li>\n<li>联动</li>\n<li>预警</li>\n<li>创新</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"数字社会\"><a class=\"anchor\" href=\"#数字社会\">#</a> 数字社会</h2>\n<h3 id=\"数字民生\"><a class=\"anchor\" href=\"#数字民生\">#</a> 数字民生</h3>\n<p>强调：</p>\n<ul>\n<li>普惠</li>\n<li>赋能</li>\n<li>利民</li>\n</ul>\n<h3 id=\"智慧城市\"><a class=\"anchor\" href=\"#智慧城市\">#</a> 智慧城市</h3>\n<ul>\n<li>智慧城市建设更加注重以人民为中心</li>\n<li>新技术持续赋能智慧城市的建设与发展</li>\n<li>城市治理现代化是智慧城市建设的必然要求</li>\n<li>共建、共治、共享生态模式助理智慧城市高质量发展</li>\n</ul>\n<p>核心能力：</p>\n<ol>\n<li>数据治理</li>\n<li>数字孪生</li>\n<li>边际决策</li>\n<li>多元融合</li>\n<li>态势感知</li>\n</ol>\n<p>成熟度等级</p>\n<ol>\n<li>一级（规划级）</li>\n<li>二级（管理级）</li>\n<li>三级（协同级）</li>\n<li>四级（优化级）</li>\n<li>五级（引领级）</li>\n</ol>\n<h3 id=\"数字乡村\"><a class=\"anchor\" href=\"#数字乡村\">#</a> 数字乡村</h3>\n<p>城乡数字鸿沟大幅度缩小，农民数字化素养显著提升。农业农村现代化基本实现。</p>\n<h3 id=\"数字生活\"><a class=\"anchor\" href=\"#数字生活\">#</a> 数字生活</h3>\n<p>是依托互联网和一系列数字科技技术应用为基础的一种生活方式</p>\n<ol>\n<li>生活工具数字化</li>\n<li>生活方式数字化</li>\n<li>生活内容数字化</li>\n</ol>\n<h2 id=\"数字生态\"><a class=\"anchor\" href=\"#数字生态\">#</a> 数字生态</h2>\n<ol>\n<li>数据要素市场</li>\n<li>数字营商环境</li>\n<li>网络安全保护</li>\n</ol>\n<h1 id=\"数字化转型与元宇宙\"><a class=\"anchor\" href=\"#数字化转型与元宇宙\">#</a> 数字化转型与元宇宙</h1>\n<h2 id=\"数字化转型\"><a class=\"anchor\" href=\"#数字化转型\">#</a> 数字化转型</h2>\n<h3 id=\"驱动因素\"><a class=\"anchor\" href=\"#驱动因素\">#</a> 驱动因素</h3>\n<ol>\n<li>\n<p>生产力飞升：第四次科技革命</p>\n</li>\n<li>\n<p>生产要素变化：数据要素的诞生</p>\n</li>\n<li>\n<p>信息传播效率突破：社会互联网新格局</p>\n</li>\n<li>\n<p>社会 “智慧主体” 规模：快速复制与 “智能 +”</p>\n</li>\n</ol>\n<h3 id=\"困难\"><a class=\"anchor\" href=\"#困难\">#</a> 困难</h3>\n<ol>\n<li>决策瓶颈</li>\n<li>变革制约</li>\n<li>知识资产流失</li>\n<li>需求响应延迟</li>\n</ol>\n<h2 id=\"元宇宙\"><a class=\"anchor\" href=\"#元宇宙\">#</a> 元宇宙</h2>\n<p>特征：</p>\n<ul>\n<li>沉浸式体验</li>\n<li>虚拟身份</li>\n<li>虚拟经济</li>\n<li>虚拟社会治理</li>\n</ul>\n",
            "tags": [
                "软考",
                "信息系统项目管理师",
                "软考",
                "高项"
            ]
        },
        {
            "id": "http://example.com/2023/08/28/markmap%E6%B5%8B%E8%AF%95/",
            "url": "http://example.com/2023/08/28/markmap%E6%B5%8B%E8%AF%95/",
            "title": "markmap测试",
            "date_published": "2023-08-28T13:15:19.000Z",
            "content_html": "<h1 id=\"markmap测试\"><a class=\"anchor\" href=\"#markmap测试\">#</a> markmap 测试</h1>\n<p>\n<div class=\"markmap-container\" style=\"height:400px\">\n  <svg data=\"{&quot;t&quot;:&quot;root&quot;,&quot;d&quot;:0,&quot;v&quot;:&quot;&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[0,1]},&quot;v&quot;:&quot;links&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[1,2]},&quot;v&quot;:&quot;&lt;strong&gt;inline&lt;/strong&gt; &lt;del&gt;text&lt;/del&gt; &lt;em&gt;styles&lt;/em&gt;&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[2,4]},&quot;v&quot;:&quot;multiline&lt;br&gt;\\ntext&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[4,5]},&quot;v&quot;:&quot;&lt;code&gt;inline code&lt;/code&gt;&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[5,6]},&quot;v&quot;:&quot;KaTeX - $x = {-b \\\\pm \\\\sqrt{b^2-4ac} \\\\over 2a}&quot;}],&quot;p&quot;:{}}\"/>\n</div>\n</p>\n",
            "tags": [
                "测试",
                "测试"
            ]
        },
        {
            "id": "http://example.com/2023/08/24/%E5%AD%90%E5%BA%8F%E5%88%97%E9%97%AE%E9%A2%98/",
            "url": "http://example.com/2023/08/24/%E5%AD%90%E5%BA%8F%E5%88%97%E9%97%AE%E9%A2%98/",
            "title": "子序列问题",
            "date_published": "2023-08-24T15:55:53.000Z",
            "content_html": "<h1 id=\"最长上升子序列\"><a class=\"anchor\" href=\"#最长上升子序列\">#</a> 最长上升子序列</h1>\n<p>给你一个整数数组 nums ，找到其中最长严格递增子序列的长度。</p>\n<p>子序列是由数组派生而来的序列，删除（或不删除）数组中的元素而不改变其余元素的顺序。例如，[3,6,2,7] 是数组 [0,3,1,6,2,2,7] 的子序列。</p>\n<p>示例 1：</p>\n<ul>\n<li>输入：nums = [10,9,2,5,3,7,101,18]</li>\n<li>输出：4</li>\n<li>解释：最长递增子序列是 [2,3,7,101]，因此长度为 4 。</li>\n</ul>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>class Solution <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>public<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">int</span> <span class=\"token function\">lengthOfLIS</span><span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> nums<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> nums<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token function\">dp</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">int</span> result <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> nums<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> i<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> nums<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span>dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> dp<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> result<span class=\"token punctuation\">)</span> result <span class=\"token operator\">=</span> dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 取长的子序列</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h1 id=\"最长连续递增序列\"><a class=\"anchor\" href=\"#最长连续递增序列\">#</a> 最长连续递增序列</h1>\n<p>给定一个未经排序的整数数组，找到最长且 连续递增的子序列，并返回该序列的长度。</p>\n<p>连续递增的子序列 可以由两个下标 l 和 r（l &lt;r）确定，如果对于每个 l &lt;= i &lt; r，都有 nums [i] &lt; nums [i + 1] ，那么子序列 [nums [l], nums [l + 1], ..., nums [r - 1], nums [r]] 就是连续递增子序列。</p>\n<p>示例 1：</p>\n<ul>\n<li>输入：nums = [1,3,5,4,7]</li>\n<li>输出：3</li>\n<li>解释：最长连续递增序列是 [1,3,5], 长度为 3。尽管 [1,3,5,7] 也是升序的子序列，但它不是连续的，因为 5 和 7 在原数组里被 4 隔开。</li>\n</ul>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>class Solution <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>public<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">int</span> <span class=\"token function\">findLengthOfLCIS</span><span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> nums<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">int</span> result <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token function\">dp</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> nums<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> nums<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 连续记录</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> dp<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> result<span class=\"token punctuation\">)</span> result <span class=\"token operator\">=</span> dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure>",
            "tags": [
                "算法",
                "动态规划",
                "动态规划"
            ]
        },
        {
            "id": "http://example.com/2023/08/24/%E6%89%93%E5%AE%B6%E5%8A%AB%E8%88%8D/",
            "url": "http://example.com/2023/08/24/%E6%89%93%E5%AE%B6%E5%8A%AB%E8%88%8D/",
            "title": "打家劫舍",
            "date_published": "2023-08-24T15:43:00.000Z",
            "content_html": "<h1 id=\"打家劫舍1\"><a class=\"anchor\" href=\"#打家劫舍1\">#</a> 打家劫舍 1</h1>\n<p>你是一个专业的小偷，计划偷窃沿街的房屋。每间房内都藏有一定的现金，影响你偷窃的唯一制约因素就是相邻的房屋装有相互连通的防盗系统，如果两间相邻的房屋在同一晚上被小偷闯入，系统会自动报警。</p>\n<p>给定一个代表每个房屋存放金额的非负整数数组，计算你 不触动警报装置的情况下 ，一夜之内能够偷窃到的最高金额。</p>\n<ul>\n<li>示例 1：</li>\n<li>输入：[1,2,3,1]</li>\n<li>输出：4</li>\n</ul>\n<p>解释：偷窃 1 号房屋 (金额 = 1) ，然后偷窃 3 号房屋 (金额 = 3)。  偷窃到的最高金额 = 1 + 3 = 4 。</p>\n<h2 id=\"分析\"><a class=\"anchor\" href=\"#分析\">#</a> 分析</h2>\n<p>1 确定 dp 数组（dp table）以及下标的含义</p>\n<p><strong>dp [i]：考虑下标 i（包括 i）以内的房屋，最多可以偷窃的金额为 dp [i]</strong>。</p>\n<p>2 确定递推公式</p>\n<p>决定 dp [i] 的因素就是第 i 房间偷还是不偷。</p>\n<p>如果偷第 i 房间，那么 dp [i] = dp [i - 2] + nums [i]</p>\n<p>如果不偷第 i 房间，那么 dp [i] = dp [i - 1]，</p>\n<p>然后 dp [i] 取最大值，即 dp [i] = max (dp [i - 2] + nums [i], dp [i - 1]);</p>\n<p>3 dp 数组如何初始化</p>\n<p>从递推公式 dp [i] = max (dp [i - 2] + nums [i], dp [i - 1]); 可以看出，递推公式的基础就是 dp [0] 和 dp [1]</p>\n<p>从 dp [i] 的定义上来讲，dp [0] 一定是 nums [0]，dp [1] 就是 nums [0] 和 nums [1] 的最大值即：dp [1] = max (nums [0], nums [1]);</p>\n<p>4 确定遍历顺序</p>\n<p>dp [i] 是根据 dp [i - 2] 和 dp [i - 1] 推导出来的，那么一定是从前到后遍历！</p>\n<p>5 举例推导</p>\n<p>完整代码</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>class Solution <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>public<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">int</span> <span class=\"token function\">rob</span><span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> nums<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> nums<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token function\">dp</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        dp<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> nums<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        dp<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> nums<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> nums<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span>dp<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> dp<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">return</span> dp<span class=\"token punctuation\">[</span>nums<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h1 id=\"打家劫舍2\"><a class=\"anchor\" href=\"#打家劫舍2\">#</a> 打家劫舍 2</h1>\n<p>你是一个专业的小偷，计划偷窃沿街的房屋，每间房内都藏有一定的现金。这个地方所有的房屋都 围成一圈 ，这意味着第一个房屋和最后一个房屋是紧挨着的。同时，相邻的房屋装有相互连通的防盗系统，如果两间相邻的房屋在同一晚上被小偷闯入，系统会自动报警 。</p>\n<p>给定一个代表每个房屋存放金额的非负整数数组，计算你 在不触动警报装置的情况下 ，能够偷窃到的最高金额。</p>\n<p>示例 1：</p>\n<ul>\n<li>输入：nums = [2,3,2]</li>\n<li>输出：3</li>\n<li>解释：你不能先偷窃 1 号房屋（金额 = 2），然后偷窃 3 号房屋（金额 = 2）, 因为他们是相邻的。</li>\n</ul>\n<h2 id=\"分析-2\"><a class=\"anchor\" href=\"#分析-2\">#</a> 分析</h2>\n<p>成环要考虑三种情况</p>\n<p>1 考虑不包含首位元素</p>\n<p>2 考虑含首不含尾</p>\n<p>3 考虑含尾不含首</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 注意注释中的情况二情况三，以及把 198. 打家劫舍的代码抽离出来了</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>class Solution <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>public<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">int</span> <span class=\"token function\">rob</span><span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> nums<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> nums<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">int</span> result1 <span class=\"token operator\">=</span> <span class=\"token function\">robRange</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> nums<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 情况二</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">int</span> result2 <span class=\"token operator\">=</span> <span class=\"token function\">robRange</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> nums<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 情况三</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span>result1<span class=\"token punctuation\">,</span> result2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token comment\">// 198. 打家劫舍的逻辑</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">int</span> <span class=\"token function\">robRange</span><span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> nums<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> start<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> end<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>end <span class=\"token operator\">==</span> start<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> nums<span class=\"token punctuation\">[</span>start<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token function\">dp</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        dp<span class=\"token punctuation\">[</span>start<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> nums<span class=\"token punctuation\">[</span>start<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        dp<span class=\"token punctuation\">[</span>start <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>start<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> nums<span class=\"token punctuation\">[</span>start <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> start <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> end<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span>dp<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> dp<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">return</span> dp<span class=\"token punctuation\">[</span>end<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h1 id=\"打家劫舍3\"><a class=\"anchor\" href=\"#打家劫舍3\">#</a> 打家劫舍 3</h1>\n<p>在上次打劫完一条街道之后和一圈房屋后，小偷又发现了一个新的可行窃的地区。这个地区只有一个入口，我们称之为 “根”。 除了 “根” 之外，每栋房子有且只有一个 “父 “房子与之相连。一番侦察之后，聪明的小偷意识到 “这个地方的所有房屋的排列类似于一棵二叉树”。 如果两个直接相连的房子在同一天晚上被打劫，房屋将自动报警。</p>\n<p>计算在不触动警报的情况下，小偷一晚能够盗取的最高金额。</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>输入<span class=\"token operator\">:</span> root <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span>null<span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span>null<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>输出<span class=\"token operator\">:</span> <span class=\"token number\">7</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>解释<span class=\"token operator\">:</span> 小偷一晚能够盗取的最高金额 <span class=\"token number\">3</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token operator\">=</span> <span class=\"token number\">7</span></pre></td></tr></table></figure><h2 id=\"分析-3\"><a class=\"anchor\" href=\"#分析-3\">#</a> 分析</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wcm9ncmFtbWVyY2FybC5jb20vMDMzNy4lRTYlODklOTMlRTUlQUUlQjYlRTUlOEElQUIlRTglODglOERJSUkuaHRtbCMlRTYlODAlOUQlRTglQjclQUY=\">代码随想录 (programmercarl.com)</span></p>\n",
            "tags": [
                "算法",
                "动态规划",
                "动态规划"
            ]
        },
        {
            "id": "http://example.com/2023/08/24/%E5%A4%9A%E9%87%8D%E8%83%8C%E5%8C%85/",
            "url": "http://example.com/2023/08/24/%E5%A4%9A%E9%87%8D%E8%83%8C%E5%8C%85/",
            "title": "多重背包",
            "date_published": "2023-08-24T15:30:15.000Z",
            "content_html": "<h1 id=\"题目\"><a class=\"anchor\" href=\"#题目\">#</a> 题目</h1>\n<p>有 N 种物品和一个容量为 V 的背包。第 i 种物品最多有 Mi 件可用，每件耗费的空间是 Ci ，价值是 Wi 。求解将哪些物品装入背包可使这些物品的耗费的空间 总和不超过背包容量，且价值总和最大。</p>\n<h1 id=\"分析\"><a class=\"anchor\" href=\"#分析\">#</a> 分析</h1>\n<p>多重背包和 01 背包是非常像的， 为什么和 01 背包像呢？</p>\n<p>每件物品最多有 Mi 件可用，把 Mi 件摊开，其实就是一个 01 背包问题了。</p>\n<p>例如：</p>\n<p>背包最大重量为 10。</p>\n<p>物品为：</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>重量</th>\n<th>价值</th>\n<th>数量</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>物品 0</td>\n<td>1</td>\n<td>15</td>\n<td>2</td>\n</tr>\n<tr>\n<td>物品 1</td>\n<td>3</td>\n<td>20</td>\n<td>3</td>\n</tr>\n<tr>\n<td>物品 2</td>\n<td>4</td>\n<td>30</td>\n<td>2</td>\n</tr>\n</tbody>\n</table>\n<p>问背包能背的物品最大价值是多少？</p>\n<p>和如下情况有区别么？</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>重量</th>\n<th>价值</th>\n<th>数量</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>物品 0</td>\n<td>1</td>\n<td>15</td>\n<td>1</td>\n</tr>\n<tr>\n<td>物品 0</td>\n<td>1</td>\n<td>15</td>\n<td>1</td>\n</tr>\n<tr>\n<td>物品 1</td>\n<td>3</td>\n<td>20</td>\n<td>1</td>\n</tr>\n<tr>\n<td>物品 1</td>\n<td>3</td>\n<td>20</td>\n<td>1</td>\n</tr>\n<tr>\n<td>物品 1</td>\n<td>3</td>\n<td>20</td>\n<td>1</td>\n</tr>\n<tr>\n<td>物品 2</td>\n<td>4</td>\n<td>30</td>\n<td>1</td>\n</tr>\n<tr>\n<td>物品 2</td>\n<td>4</td>\n<td>30</td>\n<td>1</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">test_multi_pack</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> weight <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> value <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">15</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> nums <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">int</span> bagWeight <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> nums<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">//nums [i] 保留到 1，把其他物品都展开</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            weight<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>weight<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            value<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token function\">dp</span><span class=\"token punctuation\">(</span>bagWeight <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> weight<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 遍历物品</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> bagWeight<span class=\"token punctuation\">;</span> j <span class=\"token operator\">>=</span> weight<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 遍历背包容量</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            dp<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span>dp<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> dp<span class=\"token punctuation\">[</span>j <span class=\"token operator\">-</span> weight<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> value<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;=</span> bagWeight<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            cout <span class=\"token operator\">&lt;&lt;</span> dp<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" \"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        cout <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> dp<span class=\"token punctuation\">[</span>bagWeight<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token function\">test_multi_pack</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "算法",
                "动态规划",
                "动态规划"
            ]
        },
        {
            "id": "http://example.com/2023/08/24/%E5%AE%8C%E5%85%A8%E8%83%8C%E5%8C%85/",
            "url": "http://example.com/2023/08/24/%E5%AE%8C%E5%85%A8%E8%83%8C%E5%8C%85/",
            "title": "完全背包",
            "date_published": "2023-08-24T15:05:46.000Z",
            "content_html": "<h1 id=\"题目\"><a class=\"anchor\" href=\"#题目\">#</a> 题目</h1>\n<p>有 N 件物品和一个最多能背重量为 W 的背包。第 i 件物品的重量是 weight [i]，得到的价值是 value [i] 。<strong>每件物品都有无限个（也就是可以放入背包多次）</strong>，求解将哪些物品装入背包里物品价值总和最大。</p>\n<h1 id=\"分析\"><a class=\"anchor\" href=\"#分析\">#</a> 分析</h1>\n<p><strong>完全背包和 01 背包问题唯一不同的地方就是，每种物品有无限件</strong>。</p>\n<p>01 背包和完全背包唯一不同就是体现在遍历顺序上</p>\n<p>首先再回顾一下 01 背包的核心代码</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> weight<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 遍历物品</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> bagWeight<span class=\"token punctuation\">;</span> j <span class=\"token operator\">>=</span> weight<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 遍历背包容量</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        dp<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span>dp<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> dp<span class=\"token punctuation\">[</span>j <span class=\"token operator\">-</span> weight<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> value<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>我们知道 01 背包内嵌的循环是从大到小遍历，为了保证每个物品仅被添加一次。</p>\n<p>而完全背包的物品是可以添加多次的，所以要从小到大去遍历，即：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 先遍历物品，再遍历背包</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> weight<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 遍历物品</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> weight<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;=</span> bagWeight <span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 遍历背包容量</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        dp<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span>dp<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> dp<span class=\"token punctuation\">[</span>j <span class=\"token operator\">-</span> weight<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> value<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>完整代码</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 先遍历物品，在遍历背包</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">test_CompletePack</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> weight <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> value <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">15</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">int</span> bagWeight <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token function\">dp</span><span class=\"token punctuation\">(</span>bagWeight <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> weight<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 遍历物品</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> weight<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;=</span> bagWeight<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 遍历背包容量</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            dp<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span>dp<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> dp<span class=\"token punctuation\">[</span>j <span class=\"token operator\">-</span> weight<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> value<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> dp<span class=\"token punctuation\">[</span>bagWeight<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token function\">test_CompletePack</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 先遍历背包，再遍历物品</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">test_CompletePack</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> weight <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> value <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">15</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">int</span> bagWeight <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token function\">dp</span><span class=\"token punctuation\">(</span>bagWeight <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;=</span> bagWeight<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 遍历背包容量</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> weight<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 遍历物品</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">-</span> weight<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> dp<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span>dp<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> dp<span class=\"token punctuation\">[</span>j <span class=\"token operator\">-</span> weight<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> value<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> dp<span class=\"token punctuation\">[</span>bagWeight<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token function\">test_CompletePack</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "算法",
                "动态规划",
                "动态规划"
            ]
        },
        {
            "id": "http://example.com/2023/08/24/0-1%E8%83%8C%E5%8C%85/",
            "url": "http://example.com/2023/08/24/0-1%E8%83%8C%E5%8C%85/",
            "title": "0-1背包",
            "date_published": "2023-08-24T14:51:49.000Z",
            "content_html": "<h1 id=\"题目\"><a class=\"anchor\" href=\"#题目\">#</a> 题目</h1>\n<p>有 n 件物品和一个最多能背重量为 w 的背包。第 i 件物品的重量是 weight [i]，得到的价值是 value [i] 。<strong>每件物品只能用一次</strong>，求解将哪些物品装入背包里物品价值总和最大。</p>\n<h1 id=\"分析\"><a class=\"anchor\" href=\"#分析\">#</a> 分析</h1>\n<h2 id=\"二维dp数组01背包\"><a class=\"anchor\" href=\"#二维dp数组01背包\">#</a> 二维 dp 数组 01 背包</h2>\n<p>1 确定 dp 数组以及下标含义</p>\n<p>对于背包问题，有一种写法， 是使用二维数组，即<strong> dp【i】【j】 表示从下标为 [0-i] 的物品里任意取，放进容量为 j 的背包，价值总和最大是多少</strong>。</p>\n<p>2 确定递推公式</p>\n<p>dp [i] [j] 有两种情况</p>\n<p>第一种 <strong>不放物品 i</strong>：由 dp [i - 1] [j] 推出，即背包容量为 j，里面不放物品 i 的最大价值，此时 dp [i][j] 就是 dp [i - 1] [j]。(其实就是当物品 i 的重量大于背包 j 的重量时，物品 i 无法放进背包中，所以背包内的价值依然和前面相同。</p>\n<p>第二种 <strong>放物品 i</strong>：由 dp [i - 1] [j - weight [i]] 推出，dp [i - 1] [j - weight [i]] 为背包容量为 j - weight [i] 的时候不放物品 i 的最大价值，那么 dp [i - 1][j - weight [i]] + value [i] （物品 i 的价值），就是背包放物品 i 得到的最大价值</p>\n<p>所以递归公式： dp [i][j] = max (dp [i - 1] [j], dp [i - 1] [j - weight [i]] + value [i]);</p>\n<p>3 dp 数组如何初始化</p>\n<figure class=\"highlight text\"><figcaption data-lang=\"text\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>// 初始化 dp</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>vector&lt;vector&lt;int>> dp(weight.size(), vector&lt;int>(bagweight + 1, 0));</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>for (int j = weight[0]; j &lt;= bagweight; j++) &#123;</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    dp[0][j] = value[0];</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>&#125;</pre></td></tr></table></figure><p>4 确定遍历顺序</p>\n<p>先遍历物品或者背包重量都可以<strong>先遍历物品更好理解</strong></p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//weight 数组的大小 就是物品个数</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> weight<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 遍历物品</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;=</span> bagweight<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 遍历背包容量</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">&lt;</span> weight<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> dp<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">else</span> dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span>dp<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> dp<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j <span class=\"token operator\">-</span> weight<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> value<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>5 举例</p>\n<p>。。</p>\n<p>完整代码</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">test_2_wei_bag_problem1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> weight <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> value <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">15</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">int</span> bagweight <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\">// 二维数组</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    vector<span class=\"token operator\">&lt;</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">>></span> <span class=\"token function\">dp</span><span class=\"token punctuation\">(</span>weight<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span>bagweight <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token comment\">// 初始化</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> weight<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;=</span> bagweight<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        dp<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> value<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token comment\">//weight 数组的大小 就是物品个数</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> weight<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 遍历物品</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;=</span> bagweight<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 遍历背包容量</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">&lt;</span> weight<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> dp<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token keyword\">else</span> dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span>dp<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> dp<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j <span class=\"token operator\">-</span> weight<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> value<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> dp<span class=\"token punctuation\">[</span>weight<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>bagweight<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token function\">test_2_wei_bag_problem1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"一维dp数组滚动数组\"><a class=\"anchor\" href=\"#一维dp数组滚动数组\">#</a> 一维 dp 数组（滚动数组）</h2>\n<p>1 确定 dp 数组的定义</p>\n<p>在一维 dp 数组中，dp [j] 表示：容量为 j 的背包，所背的物品价值可以最大为 dp [j]。</p>\n<p>2 一维 dp 数组的递推公式</p>\n<p>dp [j] 为 容量为 j 的背包所背的最大价值，那么如何推导 dp [j] 呢？</p>\n<p>dp [j] 可以通过 dp [j - weight [i]] 推导出来，dp [j - weight [i]] 表示容量为 j - weight [i] 的背包所背的最大价值。</p>\n<p>dp [j - weight [i]] + value [i] 表示 容量为 j - 物品 i 重量 的背包 加上 物品 i 的价值。（也就是容量为 j 的背包，放入物品 i 了之后的价值即：dp [j]）</p>\n<p>此时 dp [j] 有两个选择，一个是取自己 dp [j] 相当于 二维 dp 数组中的 dp [i-1][j]，即不放物品 i，一个是取 dp [j - weight [i]] + value [i]，即放物品 i，指定是取最大的，毕竟是求最大价值，</p>\n<p>所以递归公式为：dp [j] = max (dp [j], dp [j - weight [i]] + value [i]);</p>\n<p>3 一维 dp 数组如何初始化</p>\n<p><strong>关于初始化，一定要和 dp 数组的定义吻合，否则到递推公式的时候就会越来越乱</strong>。</p>\n<p>dp [j] 表示：容量为 j 的背包，所背的物品价值可以最大为 dp [j]，那么 dp [0] 就应该是 0，因为背包容量为 0 所背的物品的最大价值就是 0。</p>\n<p>那么 dp 数组除了下标 0 的位置，初始为 0，其他下标应该初始化多少呢？</p>\n<p>看一下递归公式：dp [j] = max (dp [j], dp [j - weight [i]] + value [i]);</p>\n<p>dp 数组在推导的时候一定是取价值最大的数，如果题目给的价值都是正整数那么非 0 下标都初始化为 0 就可以了。</p>\n<p><strong>这样才能让 dp 数组在递归公式的过程中取的最大的价值，而不是被初始值覆盖了</strong>。</p>\n<p>那么我假设物品价值都是大于 0 的，所以 dp 数组初始化的时候，都初始为 0 就可以了。</p>\n<p>4 一维 dp 数组遍历顺序</p>\n<figure class=\"highlight text\"><figcaption data-lang=\"text\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>for(int i = 0; i &lt; weight.size(); i++) &#123; // 遍历物品</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    for(int j = bagWeight; j >= weight[i]; j--) &#123; // 遍历背包容量</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        dp[j] = max(dp[j], dp[j - weight[i]] + value[i]);</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    &#125;</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>&#125;</pre></td></tr></table></figure><p>完整代码</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">test_1_wei_bag_problem</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> weight <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> value <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">15</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">int</span> bagWeight <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\">// 初始化</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token function\">dp</span><span class=\"token punctuation\">(</span>bagWeight <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> weight<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 遍历物品</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> bagWeight<span class=\"token punctuation\">;</span> j <span class=\"token operator\">>=</span> weight<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 遍历背包容量</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            dp<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span>dp<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> dp<span class=\"token punctuation\">[</span>j <span class=\"token operator\">-</span> weight<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> value<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> dp<span class=\"token punctuation\">[</span>bagWeight<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token function\">test_1_wei_bag_problem</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "算法",
                "动态规划",
                "动态规划"
            ]
        },
        {
            "id": "http://example.com/2023/08/24/%E6%95%B4%E6%95%B0%E6%8B%86%E5%88%86/",
            "url": "http://example.com/2023/08/24/%E6%95%B4%E6%95%B0%E6%8B%86%E5%88%86/",
            "title": "整数拆分",
            "date_published": "2023-08-24T14:06:32.000Z",
            "content_html": "<h1 id=\"题目\"><a class=\"anchor\" href=\"#题目\">#</a> 题目</h1>\n<p>给定一个正整数  <code>n</code>  ，将其拆分为  <code>k</code>  个 <strong>正整数</strong> 的和（  <code>k &gt;= 2</code>  ），并使这些整数的乘积最大化。</p>\n<p>返回 <em>你可以获得的最大乘积</em> 。</p>\n<p><strong>示例 1:</strong></p>\n<pre><code>输入: n = 2\n输出: 1\n解释: 2 = 1 + 1, 1 × 1 = 1。\n</code></pre>\n<h1 id=\"分析\"><a class=\"anchor\" href=\"#分析\">#</a> 分析</h1>\n<p>动态规划五部曲</p>\n<p>1 确定 dp 数组及下标的含义</p>\n<p>dp [i]：分拆数字 i，得到最大乘积和 dp [i]</p>\n<p>2 确定递推公式</p>\n<p>dp[i] = max({dp[i], (i - j) * j, dp[i - j] * j});</p>\n<p>3 dp 的初始化</p>\n<p>dp[2] = 1</p>\n<p>4 确定遍历顺序</p>\n<p>dp [i] 是依靠 dp [i - j] 的状态，所以遍历 i 一定是从前向后遍历，先有 dp [i - j] 再有 dp [i]。</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> n <span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span>dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">-</span> j<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> j<span class=\"token punctuation\">,</span> dp<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> j<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>5 举例推导 dp 数组</p>\n<p>。。。。</p>\n<p>完整代码</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 时间复杂度：O (n^2)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// 空间复杂度：O (n)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>class Solution <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>public<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">int</span> <span class=\"token function\">integerBreak</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token function\">dp</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        dp<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> n <span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;=</span> i <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span>dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">-</span> j<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> j<span class=\"token punctuation\">,</span> dp<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> j<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">return</span> dp<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure>",
            "tags": [
                "算法",
                "动态规划",
                "动态规划"
            ]
        },
        {
            "id": "http://example.com/2023/08/24/%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0/",
            "url": "http://example.com/2023/08/24/%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0/",
            "title": "斐波那契数",
            "date_published": "2023-08-24T13:37:43.000Z",
            "content_html": "<h1 id=\"题目\"><a class=\"anchor\" href=\"#题目\">#</a> 题目</h1>\n<p><strong>斐波那契数</strong> （通常用  <code>F(n)</code>  表示）形成的序列称为 <strong>斐波那契数列</strong> 。该数列由  <code>0</code>  和  <code>1</code>  开始，后面的每一项数字都是前面两项数字的和。也就是：</p>\n<pre><code>F(0) = 0，F(1) = 1\nF(n) = F(n - 1) + F(n - 2)，其中 n &gt; 1\n</code></pre>\n<p>给定  <code>n</code>  ，请计算  <code>F(n)</code>  。</p>\n<p><strong>示例 1：</strong></p>\n<pre><code>输入：n = 2\n输出：1\n解释：F(2) = F(1) + F(0) = 1 + 0 = 1\n</code></pre>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9maWJvbmFjY2ktbnVtYmVyLw==\">509. 斐波那契数 - 力扣（LeetCode）</span></p>\n<h1 id=\"分析\"><a class=\"anchor\" href=\"#分析\">#</a> 分析</h1>\n<p>动规五部曲：</p>\n<p>1 确定 dp 数组及下标的含义</p>\n<p>dp【i】的定义为：第 i 个数的斐波那契数的值是 dp【i】</p>\n<p>2 确定递推公式</p>\n<p>题目给出了， <strong>dp[i] = dp[i - 1] + dp[i - 2];</strong></p>\n<p>3 dp 数组如何初始化</p>\n<figure class=\"highlight text\"><figcaption data-lang=\"text\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>dp[0] = 0;</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>dp[1] = 1;</pre></td></tr></table></figure><p>4 确定遍历顺序</p>\n<p>从递归公式 dp [i] = dp [i - 1] + dp [i - 2]; 中可以看出，dp [i] 是依赖 dp [i - 1] 和 dp [i - 2]，那么遍历的顺序一定是从前到后遍历的</p>\n<p>5 举例推导 dp 数组</p>\n<p>按照这个递推公式 dp [i] = dp [i - 1] + dp [i - 2]，我们来推导一下，当 N 为 10 的时候，dp 数组应该是如下的数列：</p>\n<p>0 1 1 2 3 5 8 13 21 34 55</p>\n<p>如果代码写出来，发现结果不对，就把 dp 数组打印出来看看和我们推导的数列是不是一致的。</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>class Solution <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>public<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">int</span> <span class=\"token function\">fib</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> N<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>N <span class=\"token operator\">&lt;=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> N<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token function\">dp</span><span class=\"token punctuation\">(</span>N <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        dp<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        dp<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> N<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> dp<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> dp<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">return</span> dp<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure>",
            "tags": [
                "算法",
                "动态规划",
                "动态规划"
            ]
        },
        {
            "id": "http://example.com/2023/08/24/%E5%90%88%E5%B9%B6%E5%8C%BA%E9%97%B4/",
            "url": "http://example.com/2023/08/24/%E5%90%88%E5%B9%B6%E5%8C%BA%E9%97%B4/",
            "title": "合并区间",
            "date_published": "2023-08-24T07:29:27.000Z",
            "content_html": "<h1 id=\"题目\"><a class=\"anchor\" href=\"#题目\">#</a> 题目</h1>\n<p>以数组  <code>intervals</code>  表示若干个区间的集合，其中单个区间为  <code>intervals[i] = [starti, endi]</code>  。请你合并所有重叠的区间，并返回 <em>一个不重叠的区间数组，该数组需恰好覆盖输入中的所有区间</em> 。</p>\n<p><strong>示例 1：</strong></p>\n<pre><code>输入：intervals = [[1,3],[2,6],[8,10],[15,18]]\n输出：[[1,6],[8,10],[15,18]]\n解释：区间 [1,3] 和 [2,6] 重叠, 将它们合并为 [1,6].\n</code></pre>\n<p><strong>示例 2：</strong></p>\n<pre><code>输入：intervals = [[1,4],[4,5]]\n输出：[[1,5]]\n解释：区间 [1,4] 和 [4,5] 可被视为重叠区间。\n</code></pre>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tZXJnZS1pbnRlcnZhbHMv\">56. 合并区间 - 力扣（LeetCode）</span></p>\n<h1 id=\"分析\"><a class=\"anchor\" href=\"#分析\">#</a> 分析</h1>\n<p>判断区间重叠，</p>\n<p>先排序，让所有的相邻区间尽可能的重叠在一起，按左边界，或者右边界排序都可以，处理逻辑稍有不同。</p>\n<p>按照左边界从小到大排序之后，如果  <code>intervals[i][0] &lt;= intervals[i - 1][1]</code>  即 intervals [i] 的左边界 &lt;= intervals [i - 1] 的右边界，则一定有重叠</p>\n<p>知道如何判断重复之后，剩下的就是合并了，如何去模拟合并区间呢？</p>\n<p>其实就是用合并区间后左边界和右边界，作为一个新的区间，加入到 result 数组里就可以了。如果没有合并就把原区间加入到 result 数组。</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>class Solution <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>public<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    vector<span class=\"token operator\">&lt;</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">>></span> <span class=\"token function\">merge</span><span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">>></span><span class=\"token operator\">&amp;</span> intervals<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        vector<span class=\"token operator\">&lt;</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">>></span> result<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>intervals<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 区间集合为空直接返回</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token comment\">// 排序的参数使用了 lambda 表达式</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token function\">sort</span><span class=\"token punctuation\">(</span>intervals<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> intervals<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">return</span> a<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> b<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token comment\">// 第一个区间就可以放进结果集里，后面如果重叠，在 result 上直接合并</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        result<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>intervals<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> intervals<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span><span class=\"token function\">back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> intervals<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 发现重叠区间</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                <span class=\"token comment\">// 合并区间，只更新右边界就好，因为 result.back () 的左边界一定是最小值，因为我们按照左边界排序的</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                result<span class=\"token punctuation\">.</span><span class=\"token function\">back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span><span class=\"token function\">back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> intervals<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                result<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>intervals<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 区间不重叠 </span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure>",
            "tags": [
                "算法",
                "贪心算法",
                "贪心算法"
            ]
        },
        {
            "id": "http://example.com/2023/08/24/%E5%88%86%E5%8F%91%E7%B3%96%E6%9E%9C/",
            "url": "http://example.com/2023/08/24/%E5%88%86%E5%8F%91%E7%B3%96%E6%9E%9C/",
            "title": "分发糖果",
            "date_published": "2023-08-24T07:12:17.000Z",
            "content_html": "<h1 id=\"题目\"><a class=\"anchor\" href=\"#题目\">#</a> 题目</h1>\n<p><code>n</code>  个孩子站成一排。给你一个整数数组  <code>ratings</code>  表示每个孩子的评分。</p>\n<p>你需要按照以下要求，给这些孩子分发糖果：</p>\n<ul>\n<li>每个孩子至少分配到  <code>1</code>  个糖果。</li>\n<li>相邻两个孩子评分更高的孩子会获得更多的糖果。</li>\n</ul>\n<p>请你给每个孩子分发糖果，计算并返回需要准备的 <strong>最少糖果数目</strong> 。</p>\n<p><strong>示例 1：</strong></p>\n<pre><code>输入：ratings = [1,0,2]\n输出：5\n解释：你可以分别给第一个、第二个、第三个孩子分发 2、1、2 颗糖果。\n</code></pre>\n<p><strong>示例 2：</strong></p>\n<pre><code>输入：ratings = [1,2,2]\n输出：4\n解释：你可以分别给第一个、第二个、第三个孩子分发 1、2、1 颗糖果。\n     第三个孩子只得到 1 颗糖果，这满足题面中的两个条件。\n</code></pre>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9jYW5keS8=\">135. 分发糖果 - 力扣（LeetCode）</span></p>\n<h1 id=\"分析\"><a class=\"anchor\" href=\"#分析\">#</a> 分析</h1>\n<p>这道题目一定是要确定一边之后，再确定另一边，例如比较每一个孩子的左边，然后再比较右边，<strong>如果两边一起考虑一定会顾此失彼</strong>。</p>\n<p>先确定右边评分大于左边的情况（也就是从前向后遍历）</p>\n<p>此时局部最优：只要右边评分比左边大，右边的孩子就多一个糖果，全局最优：相邻的孩子中，评分高的右孩子获得比左边孩子更多的糖果</p>\n<p>局部最优可以推出全局最优。</p>\n<p>如果 ratings [i] &gt; ratings [i - 1] 那么 [i] 的糖 一定要比 [i - 1] 的糖多一个，所以贪心：candyVec [i] = candyVec [i - 1] + 1</p>\n<p>代码如下：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 从前向后</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> ratings<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ratings<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> ratings<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> candyVec<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> candyVec<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>再确定左孩子大于右孩子的情况（从后向前遍历）</p>\n<p>遍历顺序这里有同学可能会有疑问，为什么不能从前向后遍历呢？</p>\n<p>因为 rating [5] 与 rating [4] 的比较 要利用上 rating [5] 与 rating [6] 的比较结果，所以 要从后向前遍历。</p>\n<p>如果从前向后遍历，rating [5] 与 rating [4] 的比较 就不能用上 rating [5] 与 rating [6] 的比较结果了 。<strong>所以确定左孩子大于右孩子的情况一定要从后向前遍历！</strong></p>\n<p>如果 ratings [i] &gt; ratings [i + 1]，此时 candyVec [i]（第 i 个小孩的糖果数量）就有两个选择了，一个是 candyVec [i + 1] + 1（从右边这个加 1 得到的糖果数量），一个是 candyVec [i]（之前比较右孩子大于左孩子得到的糖果数量）。</p>\n<p>那么又要贪心了，局部最优：取 candyVec [i + 1] + 1 和 candyVec [i] 最大的糖果数量，保证第 i 个小孩的糖果数量既大于左边的也大于右边的。全局最优：相邻的孩子中，评分高的孩子获得更多的糖果。</p>\n<p>局部最优可以推出全局最优。</p>\n<p>所以就取 candyVec [i + 1] + 1 和 candyVec [i] 最大的糖果数量，<strong>candyVec [i] 只有取最大的才能既保持对左边 candyVec [i - 1] 的糖果多，也比右边 candyVec [i + 1] 的糖果多</strong>。</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 从后向前</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> ratings<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ratings<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> ratings<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        candyVec<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span>candyVec<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> candyVec<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>整体代码</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 时间复杂度: O (n)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// 空间复杂度: O (n)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>class Solution <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>public<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">int</span> <span class=\"token function\">candy</span><span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> ratings<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token function\">candyVec</span><span class=\"token punctuation\">(</span>ratings<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token comment\">// 从前向后</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> ratings<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ratings<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> ratings<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> candyVec<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> candyVec<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token comment\">// 从后向前</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> ratings<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ratings<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> ratings<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                candyVec<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span>candyVec<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> candyVec<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token comment\">// 统计结果</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">int</span> result <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> candyVec<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> result <span class=\"token operator\">+=</span> candyVec<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure>",
            "tags": [
                "算法",
                "贪心算法",
                "贪心算法"
            ]
        },
        {
            "id": "http://example.com/2023/08/24/%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BA/",
            "url": "http://example.com/2023/08/24/%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BA/",
            "title": "买卖股票最佳时机",
            "date_published": "2023-08-24T05:58:06.000Z",
            "content_html": "<h1 id=\"题目\"><a class=\"anchor\" href=\"#题目\">#</a> 题目</h1>\n<p>给你一个整数数组  <code>prices</code>  ，其中  <code>prices[i]</code>  表示某支股票第  <code>i</code>  天的价格。</p>\n<p>在每一天，你可以决定是否购买和 / 或出售股票。你在任何时候 <strong>最多</strong> 只能持有 <strong>一股</strong> 股票。你也可以先购买，然后在 <strong>同一天</strong> 出售。</p>\n<p>返回 <em>你能获得的 <strong>最大</strong> 利润</em> 。</p>\n<p><strong>示例 1：</strong></p>\n<pre><code>输入：prices = [7,1,5,3,6,4]\n输出：7\n解释：在第 2 天（股票价格 = 1）的时候买入，在第 3 天（股票价格 = 5）的时候卖出, 这笔交易所能获得利润 = 5 - 1 = 4 。\n     随后，在第 4 天（股票价格 = 3）的时候买入，在第 5 天（股票价格 = 6）的时候卖出, 这笔交易所能获得利润 = 6 - 3 = 3 。\n     总利润为 4 + 3 = 7 。\n</code></pre>\n<p><strong>示例 2：</strong></p>\n<pre><code>输入：prices = [1,2,3,4,5]\n输出：4\n解释：在第 1 天（股票价格 = 1）的时候买入，在第 5 天 （股票价格 = 5）的时候卖出, 这笔交易所能获得利润 = 5 - 1 = 4 。\n     总利润为 4 。\n</code></pre>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9iZXN0LXRpbWUtdG8tYnV5LWFuZC1zZWxsLXN0b2NrLWlpLw==\">122. 买卖股票的最佳时机 II - 力扣（LeetCode）</span></p>\n<h1 id=\"分析\"><a class=\"anchor\" href=\"#分析\">#</a> 分析</h1>\n<p>以每天为单位计算利润 prices = [7,1,5,3,6,4] 利润就是【-6，4，-2，3，-2】</p>\n<p>贪心算法就是只要正利润，当然第一天没利润 所以从 1 开始</p>\n<p>局部最优：只要正利润</p>\n<p>全局最优：求最大利润</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>class Solution <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>public<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">int</span> <span class=\"token function\">maxProfit</span><span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> prices<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">int</span> result <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> prices<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            result <span class=\"token operator\">+=</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span>prices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> prices<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h1 id=\"升级\"><a class=\"anchor\" href=\"#升级\">#</a> 升级</h1>\n<p>以下是动态规划</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>class Solution <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>public<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">int</span> <span class=\"token function\">maxProfit</span><span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> prices<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">int</span> low <span class=\"token operator\">=</span> INT_MAX<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">int</span> result <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> prices<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            low <span class=\"token operator\">=</span> <span class=\"token function\">min</span><span class=\"token punctuation\">(</span>low<span class=\"token punctuation\">,</span> prices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 取最左最小价格</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            result <span class=\"token operator\">=</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">,</span> prices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> low<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 直接取最大区间利润</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"买卖股票2\"><a class=\"anchor\" href=\"#买卖股票2\">#</a> 买卖股票 2</h2>\n<p>给定一个数组，它的第 i 个元素是一支给定股票第 i 天的价格。</p>\n<p>设计一个算法来计算你所能获取的最大利润。你可以尽可能地完成更多的交易（多次买卖一支股票）。</p>\n<p>注意：你不能同时参与多笔交易（你必须在再次购买前出售掉之前的股票）。</p>\n<ul>\n<li>示例 1:</li>\n<li>输入: [7,1,5,3,6,4]</li>\n<li>输出: 7<br>\n 解释：在第 2 天（股票价格 = 1）的时候买入，在第 3 天（股票价格 = 5）的时候卖出，这笔交易所能获得利润 = 5-1 = 4。随后，在第 4 天（股票价格 = 3）的时候买入，在第 5 天（股票价格 = 6）的时候卖出，这笔交易所能获得利润 = 6-3 = 3 。</li>\n</ul>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>class Solution <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>public<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">int</span> <span class=\"token function\">maxProfit</span><span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> prices<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">int</span> len <span class=\"token operator\">=</span> prices<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        vector<span class=\"token operator\">&lt;</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">>></span> <span class=\"token function\">dp</span><span class=\"token punctuation\">(</span>len<span class=\"token punctuation\">,</span> vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        dp<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> prices<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        dp<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> len<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span>dp<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> dp<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> prices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 注意这里是和 121. 买卖股票的最佳时机唯一不同的地方。</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span>dp<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> dp<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> prices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">return</span> dp<span class=\"token punctuation\">[</span>len <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"买卖股票3\"><a class=\"anchor\" href=\"#买卖股票3\">#</a> 买卖股票 3</h2>\n<p>给定一个数组，它的第 i 个元素是一支给定的股票在第 i 天的价格。</p>\n<p>设计一个算法来计算你所能获取的最大利润。你最多可以完成 两笔 交易。</p>\n<p>注意：你不能同时参与多笔交易（你必须在再次购买前出售掉之前的股票）。</p>\n<ul>\n<li>示例 1:</li>\n<li>输入：prices = [3,3,5,0,0,3,1,4]</li>\n<li>输出：6 解释：在第 4 天（股票价格 = 0）的时候买入，在第 6 天（股票价格 = 3）的时候卖出，这笔交易所能获得利润 = 3-0 = 3 。随后，在第 7 天（股票价格 = 1）的时候买入，在第 8 天 （股票价格 = 4）的时候卖出，这笔交易所能获得利润 = 4-1 = 3。</li>\n<li></li>\n</ul>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>class Solution <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>public<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">int</span> <span class=\"token function\">maxProfit</span><span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> prices<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>prices<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        vector<span class=\"token operator\">&lt;</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">>></span> <span class=\"token function\">dp</span><span class=\"token punctuation\">(</span>prices<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        dp<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>prices<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        dp<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>prices<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> prices<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> dp<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span>dp<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> dp<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> prices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span>dp<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> dp<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> prices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span>dp<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> dp<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> prices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span>dp<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> dp<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> prices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">return</span> dp<span class=\"token punctuation\">[</span>prices<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"买卖股票4\"><a class=\"anchor\" href=\"#买卖股票4\">#</a> 买卖股票 4</h2>\n<p>给定一个整数数组 prices ，它的第 i 个元素 prices [i] 是一支给定的股票在第 i 天的价格。</p>\n<p>设计一个算法来计算你所能获取的最大利润。你最多可以完成 k 笔交易。</p>\n<p>注意：你不能同时参与多笔交易（你必须在再次购买前出售掉之前的股票）。</p>\n<ul>\n<li>示例 1：</li>\n<li>输入：k = 2, prices = [2,4,1]</li>\n<li>输出：2 解释：在第 1 天 (股票价格 = 2) 的时候买入，在第 2 天 (股票价格 = 4) 的时候卖出，这笔交易所能获得利润 = 4-2 = 2。</li>\n<li>示例 2：</li>\n<li>输入：k = 2, prices = [3,2,6,5,0,3]</li>\n<li>输出：7 解释：在第 2 天 (股票价格 = 2) 的时候买入，在第 3 天 (股票价格 = 6) 的时候卖出，这笔交易所能获得利润 = 6-2 = 4。随后，在第 5 天 (股票价格 = 0) 的时候买入，在第 6 天 (股票价格 = 3) 的时候卖出，这笔交易所能获得利润 = 3-0 = 3 。</li>\n</ul>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>class Solution <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>public<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">int</span> <span class=\"token function\">maxProfit</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> k<span class=\"token punctuation\">,</span> vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> prices<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>prices<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        vector<span class=\"token operator\">&lt;</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">>></span> <span class=\"token function\">dp</span><span class=\"token punctuation\">(</span>prices<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">*</span> k <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> k<span class=\"token punctuation\">;</span> j <span class=\"token operator\">+=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            dp<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>prices<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>i <span class=\"token operator\">&lt;</span> prices<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> k <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">+=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span>dp<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> dp<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> prices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span>dp<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> dp<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> prices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">return</span> dp<span class=\"token punctuation\">[</span>prices<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span> <span class=\"token operator\">*</span> k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"买卖股票最佳时机含冷冻期\"><a class=\"anchor\" href=\"#买卖股票最佳时机含冷冻期\">#</a> 买卖股票最佳时机含冷冻期</h2>\n<p>给定一个整数数组，其中第 i 个元素代表了第 i 天的股票价格 。</p>\n<p>设计一个算法计算出最大利润。在满足以下约束条件下，你可以尽可能地完成更多的交易（多次买卖一支股票）:</p>\n<ul>\n<li>你不能同时参与多笔交易（你必须在再次购买前出售掉之前的股票）。</li>\n<li>卖出股票后，你无法在第二天买入股票 (即冷冻期为 1 天)。</li>\n</ul>\n<p>示例:</p>\n<ul>\n<li>输入: [1,2,3,0,2]</li>\n<li>输出: 3</li>\n<li>解释：对应的交易状态为: [买入，卖出，冷冻期，买入，卖出]</li>\n</ul>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>class Solution <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>public<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">int</span> <span class=\"token function\">maxProfit</span><span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> prices<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> prices<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        vector<span class=\"token operator\">&lt;</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">>></span> <span class=\"token function\">dp</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        dp<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> prices<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 持股票</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span>dp<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span>dp<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> prices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> dp<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> prices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span>dp<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> dp<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> dp<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> prices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> dp<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span>dp<span class=\"token punctuation\">[</span>n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span>dp<span class=\"token punctuation\">[</span>n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> dp<span class=\"token punctuation\">[</span>n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"买卖股票最佳时机含手续费\"><a class=\"anchor\" href=\"#买卖股票最佳时机含手续费\">#</a> 买卖股票最佳时机含手续费</h2>\n<p>给定一个整数数组 prices，其中第 i 个元素代表了第 i 天的股票价格 ；非负整数 fee 代表了交易股票的手续费用。</p>\n<p>你可以无限次地完成交易，但是你每笔交易都需要付手续费。如果你已经购买了一个股票，在卖出它之前你就不能再继续购买股票了。</p>\n<p>返回获得利润的最大值。</p>\n<p>注意：这里的一笔交易指买入持有并卖出股票的整个过程，每笔交易你只需要为支付一次手续费。</p>\n<p>示例 1:</p>\n<ul>\n<li>输入: prices = [1, 3, 2, 8, 4, 9], fee = 2</li>\n<li>输出: 8</li>\n</ul>\n<p>解释：能够达到的最大利润:</p>\n<ul>\n<li>在此处买入 prices [0] = 1</li>\n<li>在此处卖出 prices [3] = 8</li>\n<li>在此处买入 prices [4] = 4</li>\n<li>在此处卖出 prices [5] = 9</li>\n<li>总利润: ((8 - 1) - 2) + ((9 - 4) - 2) = 8.</li>\n</ul>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>class Solution <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>public<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">int</span> <span class=\"token function\">maxProfit</span><span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> prices<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> fee<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> prices<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        vector<span class=\"token operator\">&lt;</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">>></span> <span class=\"token function\">dp</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        dp<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> prices<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 持股票</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span>dp<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> dp<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> prices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span>dp<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> dp<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> prices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> fee<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span>dp<span class=\"token punctuation\">[</span>n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> dp<span class=\"token punctuation\">[</span>n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure>",
            "tags": [
                "算法",
                "贪心算法",
                "动态规划",
                "贪心算法"
            ]
        },
        {
            "id": "http://example.com/2023/08/24/%E5%88%86%E5%8F%91%E9%A5%BC%E5%B9%B2/",
            "url": "http://example.com/2023/08/24/%E5%88%86%E5%8F%91%E9%A5%BC%E5%B9%B2/",
            "title": "分发饼干",
            "date_published": "2023-08-24T04:28:55.000Z",
            "content_html": "<h1 id=\"题目\"><a class=\"anchor\" href=\"#题目\">#</a> 题目</h1>\n<p>假设你是一位很棒的家长，想要给你的孩子们一些小饼干。但是，每个孩子最多只能给一块饼干。</p>\n<p>对每个孩子  <code>i</code> ，都有一个胃口值  <code>g[i]</code> ，这是能让孩子们满足胃口的饼干的最小尺寸；并且每块饼干  <code>j</code> ，都有一个尺寸  <code>s[j]</code>  。如果  <code>s[j] &gt;= g[i]</code> ，我们可以将这个饼干  <code>j</code>  分配给孩子  <code>i</code>  ，这个孩子会得到满足。你的目标是尽可能满足越多数量的孩子，并输出这个最大数值。</p>\n<p><strong>示例 1:</strong></p>\n<pre><code>输入: g = [1,2,3], s = [1,1]\n输出: 1\n解释: \n你有三个孩子和两块小饼干，3个孩子的胃口值分别是：1,2,3。\n虽然你有两块小饼干，由于他们的尺寸都是1，你只能让胃口值是1的孩子满足。\n所以你应该输出1。\n</code></pre>\n<p><strong>示例 2:</strong></p>\n<pre><code>输入: g = [1,2], s = [1,2,3]\n输出: 2\n解释: \n你有两个孩子和三块小饼干，2个孩子的胃口值分别是1,2。\n你拥有的饼干数量和尺寸都足以让所有孩子满足。\n所以你应该输出2.\n</code></pre>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9hc3NpZ24tY29va2llcy8=\">455. 分发饼干 - 力扣（LeetCode）</span></p>\n<h1 id=\"分析\"><a class=\"anchor\" href=\"#分析\">#</a> 分析</h1>\n<p>贪心算法是一种基于贪心策略的算法，它在每一步选择时都采取当前状态下的最优选择，从而最终得到全局最优解。贪心算法通常用于解决某些最优化问题，比如最短路径、最小生成树、任务调度等。</p>\n<p>贪心算法的核心思想是局部最优导致全局最优。简言之，每一步都选择当前看起来最好的选项，不去考虑未来可能造成的影响，即不进行回溯。这样做的前提是局部最优解能够推导出全局最优解。</p>\n<p>贪心算法的一般步骤如下：</p>\n<ol>\n<li>定义问题的解空间，并确定解的结构。</li>\n<li>利用贪心策略，做出一个局部最优解。</li>\n<li>证明此局部最优解可以扩展为全局最优解。</li>\n<li>根据上一步的证明，利用贪心策略选择下一个局部最优解。</li>\n<li>重复步骤 3 和步骤 4，直到得到全局最优解。</li>\n</ol>\n<p>然而，需要注意的是，贪心算法适用的问题必须具备贪心选择性质和最优子结构性质，才能保证贪心算法的正确性。如果问题不具备这些性质，贪心算法可能无法得到全局最优解。</p>\n<p>总的来说，贪心算法是一种简单而高效的算法，但需要合理选择贪心策略和证明其正确性。</p>\n<p>这道题最优解是大饼干给胃口大的孩子，所以我们可以给孩子和饼干排序，让大的给大的</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 时间复杂度：O (nlogn)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// 空间复杂度：O (1)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>class Solution <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>public<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">int</span> <span class=\"token function\">findContentChildren</span><span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> g<span class=\"token punctuation\">,</span> vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> s<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token function\">sort</span><span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> g<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token function\">sort</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">int</span> index <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 饼干数组的下标</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">int</span> result <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> g<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 遍历胃口</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>index <span class=\"token operator\">>=</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> s<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> g<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 遍历饼干</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                result<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                index<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure>",
            "tags": [
                "算法",
                "贪心算法",
                "贪心算法"
            ]
        },
        {
            "id": "http://example.com/2023/08/24/n%E7%9A%87%E5%90%8E%E9%97%AE%E9%A2%98/",
            "url": "http://example.com/2023/08/24/n%E7%9A%87%E5%90%8E%E9%97%AE%E9%A2%98/",
            "title": "n皇后问题",
            "date_published": "2023-08-23T16:09:14.000Z",
            "content_html": "<h1 id=\"题目\"><a class=\"anchor\" href=\"#题目\">#</a> 题目</h1>\n<p>按照国际象棋的规则，皇后可以攻击与之处在同一行或同一列或同一斜线上的棋子。</p>\n<p><strong>n 皇后问题</strong> 研究的是如何将  <code>n</code>  个皇后放置在  <code>n×n</code>  的棋盘上，并且使皇后彼此之间不能相互攻击。</p>\n<p>给你一个整数  <code>n</code>  ，返回所有不同的 <strong>n 皇后问题</strong> 的解决方案。</p>\n<p>每一种解法包含一个不同的 <strong>n 皇后问题</strong> 的棋子放置方案，该方案中  <code>'Q'</code>  和  <code>'.'</code>  分别代表了皇后和空位。</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>输入：n <span class=\"token operator\">=</span> <span class=\"token number\">4</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>输出：<span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token string\">\".Q..\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"...Q\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"Q...\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"..Q.\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"..Q.\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"Q...\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"...Q\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\".Q..\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>解释：如上图所示，<span class=\"token number\">4</span> 皇后问题存在两个不同的解法。</pre></td></tr></table></figure><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9uLXF1ZWVucy8=\">51. N 皇后 - 力扣（LeetCode）</span></p>\n<h1 id=\"分析\"><a class=\"anchor\" href=\"#分析\">#</a> 分析</h1>\n<p>深度为 n 的 n 叉树</p>\n<p>皇后们的约束条件：</p>\n<ol>\n<li>不能同行</li>\n<li>不能同列</li>\n<li>不能同斜线</li>\n</ol>\n<p>回溯三部曲：</p>\n<p>1 函数参数</p>\n<p>结果集 result，参数 n 棋盘大小</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>vector<span class=\"token operator\">&lt;</span>vector<span class=\"token operator\">&lt;</span>string<span class=\"token operator\">>></span> result<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">backtracking</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> row<span class=\"token punctuation\">,</span> vector<span class=\"token operator\">&lt;</span>string<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> chessboard<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr></table></figure><p>2 终止条件</p>\n<p>最后一行停止</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>row <span class=\"token operator\">==</span> n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    result<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>chessboard<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>3 单层逻辑</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> col <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> col <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> col<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isValid</span><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">,</span> col<span class=\"token punctuation\">,</span> chessboard<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 验证合法就可以放</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        chessboard<span class=\"token punctuation\">[</span>row<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>col<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token char\">'Q'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 放置皇后</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token function\">backtracking</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> row <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> chessboard<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        chessboard<span class=\"token punctuation\">[</span>row<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>col<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token char\">'.'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 回溯，撤销皇后</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>验证皇后位置是否合法</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>bool <span class=\"token function\">isValid</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> row<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> col<span class=\"token punctuation\">,</span> vector<span class=\"token operator\">&lt;</span>string<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> chessboard<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\">// 检查列</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> row<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 这是一个剪枝</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>chessboard<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>col<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token char\">'Q'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token keyword\">return</span> false<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\">// 检查 45 度角是否有皇后</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> row <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> j <span class=\"token operator\">=</span> col <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">>=</span><span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> j <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">--</span><span class=\"token punctuation\">,</span> j<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>chessboard<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token char\">'Q'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token keyword\">return</span> false<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token comment\">// 检查 135 度角是否有皇后</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> row <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> j <span class=\"token operator\">=</span> col <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">>=</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> j <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> i<span class=\"token operator\">--</span><span class=\"token punctuation\">,</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>chessboard<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token char\">'Q'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token keyword\">return</span> false<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">return</span> true<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>完整代码</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>class Solution <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>private<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>vector<span class=\"token operator\">&lt;</span>vector<span class=\"token operator\">&lt;</span>string<span class=\"token operator\">>></span> result<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">//n 为输入的棋盘大小</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">//row 是当前递归到棋盘的第几行了</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">backtracking</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> row<span class=\"token punctuation\">,</span> vector<span class=\"token operator\">&lt;</span>string<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> chessboard<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>row <span class=\"token operator\">==</span> n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        result<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>chessboard<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> col <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> col <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> col<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isValid</span><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">,</span> col<span class=\"token punctuation\">,</span> chessboard<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 验证合法就可以放</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            chessboard<span class=\"token punctuation\">[</span>row<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>col<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token char\">'Q'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 放置皇后</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token function\">backtracking</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> row <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> chessboard<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            chessboard<span class=\"token punctuation\">[</span>row<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>col<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token char\">'.'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 回溯，撤销皇后</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>bool <span class=\"token function\">isValid</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> row<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> col<span class=\"token punctuation\">,</span> vector<span class=\"token operator\">&lt;</span>string<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> chessboard<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token comment\">// 检查列</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> row<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 这是一个剪枝</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>chessboard<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>col<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token char\">'Q'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token keyword\">return</span> false<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token comment\">// 检查 45 度角是否有皇后</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> row <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> j <span class=\"token operator\">=</span> col <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">>=</span><span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> j <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">--</span><span class=\"token punctuation\">,</span> j<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>chessboard<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token char\">'Q'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            <span class=\"token keyword\">return</span> false<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token comment\">// 检查 135 度角是否有皇后</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> row <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> j <span class=\"token operator\">=</span> col <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">>=</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> j <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> i<span class=\"token operator\">--</span><span class=\"token punctuation\">,</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>chessboard<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token char\">'Q'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            <span class=\"token keyword\">return</span> false<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token keyword\">return</span> true<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>public<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    vector<span class=\"token operator\">&lt;</span>vector<span class=\"token operator\">&lt;</span>string<span class=\"token operator\">>></span> <span class=\"token function\">solveNQueens</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        result<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        std<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span>std<span class=\"token operator\">::</span>string<span class=\"token operator\">></span> <span class=\"token function\">chessboard</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> std<span class=\"token operator\">::</span><span class=\"token function\">string</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> <span class=\"token char\">'.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token function\">backtracking</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> chessboard<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure>",
            "tags": [
                "算法",
                "回溯",
                "回溯"
            ]
        }
    ]
}